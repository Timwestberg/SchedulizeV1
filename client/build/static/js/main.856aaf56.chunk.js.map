{"version":3,"sources":["utils/keys.js","utils/API.js","components/Navbar/index.js","components/contractor/form/W9CheckBox/index.js","components/ContractCard/index.js","pages/MapPage2.js","components/Map/TestMap/index.js","pages/MapPage.js","components/ClientCard/index.js","components/AppointmentCard/index.js","pages/Address.js","pages/NoMatch.js","components/AppointmentForm/index.js","components/contractor/form/Standing/index.js","components/contractor/index.js","components/ApptCard/index.js","components/NewAppointmentForm/form/Type.js","components/NewAppointmentForm/form/Date&TimePicker.js","components/NewAppointmentForm/form/DatePicker.js","components/NewAppointmentForm/form/PhoneNumber.js","components/NewAppointmentForm/form/Employee.js","components/NewAppointmentForm/NewAppointment.js","components/ClientForm/form/PhoneNumber.js","components/ClientForm/form/ClientName.js","components/ClientForm/index.js","pages/Cards.js","components/LogInModal/index.js","components/Nav/index.js","pages/Login.js","components/RegisterMdal/index.js","pages/Register.js","App.js","index.js"],"names":["require","config","exports","googleMaps","key","process","API_KEY2","API","getClients","axios","get","getClient","id","deleteClient","delete","saveClient","clientData","post","updateClient","_id","put","getAppts","getAppt","deleteAppt","saveAppt","apptData","getContractors","getContractor","deleteContractor","saveContractor","SaveUser","UserData","LoginUser","withStyles","theme","button","margin","spacing","unit","input","display","props","react_default","a","createElement","className","href","type","placeholder","name","value","onChange","onClick","styles","root","color","green","&$checked","checked","W9CheckBox","state","checkedG","handleChange","event","_this","setState","Object","defineProperty","target","classes","this","index_es","control","label","React","Component","contractorStand","ContractCard","country","editable","conFirstName","conLastName","conPhone","conEmail","conCert","conPrice","conNotes","conLocationName","conStreetAddress","conCity","conState","conZipCode","handleEditMode","handleInputChange","_event$target","Card_default","card","CardContent_default","AppBar_default","position","cardHeader","Toolbar_default","Typography_default","variant","grow","Button_default","container","noValidate","autoComplete","Grid_default","direction","justify","alignItems","item","xs","TextField_default","textField","disabled","fullWidth","InputLabelProps","shrink","select","conStand","SelectProps","MenuProps","menu","helperText","map","option","MenuItem_default","form_W9CheckBox","multiline","rows","defaultValue","InputProps","readOnly","background","white","flexWrap","flexGrow","marginLeft","marginRight","dense","marginTop","width","minWidth","bullet","transform","title","fontSize","pos","marginBottom","Geocode","setApiKey","style","hieght","TestMap","_Component","_getPrototypeOf2","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","showingInfoWindow","activeMarker","selectedPlace","contractors","clients","coords","loadContractors","then","res","console","log","data","catch","err","loadClients","onMarkerClick","marker","e","onClickAssign","onMapClicked","addressSearch","fromAddress","search","response","_response$results$0$g","results","geometry","location","lat","lng","error","inherits","createClass","_this2","sm","components_Navbar","components_ContractCard","dist","google","zoom","initialCenter","client","_React$createElement","billing","locationName","contactPerson","firstName","lastName","clientID","contractor","_React$createElement2","streetNumber","streetName","cityName","zipCode","contractorID","visible","GoogleApiWrapper","apiKey","gridGap","paper","padding","textAlign","palette","text","secondary","Map_TestMap","clientType","ClientCard","clientFirstName","clientLastName","billContact","clientPhone","clientEmail","companyName","billPhone","billEmail","clientCity","clientState","clientStreetName","idToUpdate","objectToUpdate","_event$target2","updateDB","objIdToUpdate","forEach","handleFormSubmit","preventDefault","clientStreetNumber","updateToApply","clientZipCode","minHeight","cardContent","hCenter","fab","NewAppointmentCard","assigneeFirstName","assigneeLastName","adjusterFirstName","adjusterLastName","refName","refNumber","address","city","postalCode","handleClose","open","handleOpen","expandIcon","ExpandMore_default","onSubmit","md","lg","aria-label","Add_default","Address","appointments","loadAppointments","removeClient","_this$state","phone","email","certification","pricing","notes","components_ClientCard","typeClient","appointment","AppointmentCard","NoMatch","RecipeReviewCard","expanded","handleExpandClick","CardHeader_default","subheader","component","CardActions_default","actions","disableActionSpacing","IconButton_default","Favorite_default","Share_default","classnames","expand","expandOpen","aria-expanded","maxWidth","media","height","paddingTop","transition","transitions","create","duration","shortest","avatar","backgroundColor","red","Standing","age","_this$props","htmlFor","onClose","onOpen","inputProps","form","TextField","ContractorCard","standingComp","field","standing","rowsMax","ApptCard","Type","PureComponent","TextMaskCustom","inputRef","other","objectWithoutProperties","reactTextMask_default","assign","ref","inputElement","mask","placeholderChar","showMask","FormattedInputs","textmask","numberformat","FormControl_default","formControl","InputLabel_default","Input_default","inputComponent","Employee","ExpansionPanel_default","ExpansionPanelSummary_default","ExpansionPanelDetails_default","adress","ClientName","change","clientName","contactBilling","handleContactChange","handleBillingChange","_this$state$billing","Cards","material_ui_pickers_esm","utils","DateFnsUtils","AppointmentForm","components_contractor","NewAppointment","ClientForm","main","breakpoints","up","flexDirection","submit","user","CssBaseline_default","Paper_default","Avatar_default","LockOutlined_default","username","password","createMuiTheme","primary","light","dark","contrastText","Nav","LoginPage","processLogin","processForm","bind","assertThisInitialized","changeUser","window","redirect","components_Nav","LogInModal","contextTypes","router","PropTypes","object","isRequired","Link","to","SignUpPage","RegisterMdal","App","BrowserRouter","Switch","Route","exact","path","Login","AddUser","Calendar","MapPage2","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.856aaf56.chunk.js","sourcesContent":["require(\"dotenv\").config();\n\nexports.googleMaps = {\n  key: process.env.API_KEY2\n};","import axios from 'axios';\n\nexport default {\n\t// Gets all clients\n\tgetClients: function() {\n\t\treturn axios.get('/api/clients');\n\t},\n\t//Gets the client with the given id\n\tgetClient: function(id) {\n\t\treturn axios.get('/api/clients/' + id);\n\t},\n\t//Deletes the client with the give id\n\tdeleteClient: function(id) {\n\t\treturn axios.delete('/api/clients/' + id);\n\t},\n\t//Saves a client to the database\n\tsaveClient: function(clientData) {\n\t\treturn axios.post('/api/clients', clientData);\n\t},\n\tupdateClient: function(_id) {\n\t\treturn axios.put('/api/client/' + _id);\n\t},\n\t// Gets all appts\n\tgetAppts: function() {\n\t\treturn axios.get('/api/appointments');\n\t},\n\t//Gets the appt with the given id\n\tgetAppt: function(id) {\n\t\treturn axios.get('/api/appointments/' + id);\n\t},\n\t//Deletes the appt with the give id\n\tdeleteAppt: function(id) {\n\t\treturn axios.delete('/api/appointments/' + id);\n\t},\n\t//Saves a appt to the database\n\tsaveAppt: function(apptData) {\n\t\treturn axios.post('/api/appointments', apptData);\n\t},\n\t// Gets all contractors\n\tgetContractors: function() {\n\t\treturn axios.get('/api/contractors');\n\t},\n\t//Gets the contractor with the given id\n\tgetContractor: function(id) {\n\t\treturn axios.get('/api/contractors/' + id);\n\t},\n\t//Deletes the contractor with the give id\n\tdeleteContractor: function(id) {\n\t\treturn axios.delete('/api/contractors/' + id);\n\t},\n\t//Saves a contractor to the database\n\tsaveContractor: function(apptData) {\n\t\treturn axios.post('/api/contractors', apptData);\n\t},\n\n\tSaveUser: function(UserData) {\n\t\treturn axios.post('/auth/register', UserData);\n\t},\n\n\tLoginUser: function(UserData) {\n\t\treturn axios.post('/auth/login', UserData);\n\t}\n};\n","import React from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport \"./style.css\";\n\nconst styles = theme => ({\n  button: {\n    margin: theme.spacing.unit,\n  },\n  input: {\n    display: 'none',\n  },\n})\n\nfunction Navbar(props) {\n\n  return (\n  <div className=\"topnav\">\n  <a href=\"/\">Home</a>\n  <a href=\"/calendar\">Calendar</a>\n  <a href=\"/addressbook\">Address Book</a>\n  <a href=\"/map\">Map</a>\n  <a href=\"/forms\">Forms</a>\n  <a href=\"/\">Logout</a>\n  <div className=\"search-container\">\n      <input type=\"text\" placeholder=\"Search..\" name=\"search\" value={props.value} onChange={props.onChange}/>\n      <button onClick={props.onClick} type=\"submit\">Submit</button>\n  </div>\n</div>\n  );\n\n}\n\nNavbar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\nexport default withStyles(styles)(Navbar);\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Checkbox, FormControlLabel, Icon } from \"@material-ui/core\";\nimport { green } from \"@material-ui/core/colors\";\n\nconst styles = {\n  root: {\n    color: green[600],\n    \"&$checked\": {\n      color: green[500]\n    }\n  },\n  checked: {}\n};\n\nclass W9CheckBox extends React.Component {\n  state = {\n    checkedG: false\n  };\n\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.checked });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={this.state.checkedG}\n            onChange={this.handleChange(\"checkedG\")}\n            value=\"checkedG\"\n            classes={{\n              root: classes.root,\n              checked: classes.checked\n            }}\n          />\n        }\n        label=\"W-9\"\n      />\n    );\n  }\n}\n\nexport default withStyles(styles)(W9CheckBox);\n","import React, { Component } from \"react\";\nimport Navbar from \"../Navbar\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport classNames from 'classnames';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { white } from \"@material-ui/core/colors\";\nimport W9CheckBox from \"../contractor/form/W9CheckBox\";\nimport ButtonBase from '@material-ui/core/ButtonBase';\n\nconst styles = theme => ({\n    cardHeader: {\n        background: `#4caf50`,\n        color: white\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    root: {\n        flexGrow: 1,\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n    },\n    dense: {\n        marginTop: 16,\n    },\n    menu: {\n        width: 200,\n    },\n    card: {\n        minWidth: 275,\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n});\n\nconst countries = [\n    {\n        value: 'USA',\n    },\n    {\n        value: 'UK',\n    },\n    {\n        value: 'JAP',\n    },\n];\n\nconst contractorStand = [\n    {\n        value: 'Good',\n    },\n    {\n        value: 'Testing',\n    },\n    {\n        value: 'Bad',\n    },\n    {\n        value: 'Issues',\n    },\n];\n\nclass ContractCard extends React.Component {\n\n    state = {\n        contractorStand: \"\",\n        country: \"\",\n        value: \"\",\n        editable: false,\n        conFirstName: this.props.conFirstName,\n        conLastName: this.props.conLastName,\n        conPhone: this.props.conPhone,\n        conEmail: this.props.conEmail,\n        conCert: this.props.conCert,\n        conPrice: this.props.conPrice,\n        conNotes: this.props.conNotes,\n        conLocationName: this.props.conLocationName,\n        conStreetAddress: this.props.conStreetAddress,\n        conCity: this.props.conCity,\n        conState: this.props.conState,\n        conZipCode: this.props.conZipCode\n    }\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n\n    handleEditMode = () => {\n        this.setState({\n            editable: true\n        })\n    }\n\n    // handleInputChange = event => {\n    //     console.log(\"working\")\n    //     const value = event.target;\n    //     this.setState({\n    //         [value]: event.target.value\n    //     });\n    // };\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div>\n                <Card className={classes.card}>\n                    <CardContent>\n                        <AppBar position=\"static\" className={classes.cardHeader}>\n                            <Toolbar>\n                                <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n                                    Contractor Contact Card\n                                      </Typography>\n                                <Button color=\"inherit\"\n                                    onClick={this.handleEditMode}\n                                >\n                                    Edit</Button>\n                            </Toolbar>\n                        </AppBar>\n                        <form className={classes.container} noValidate autoComplete=\"off\">\n                            <Grid container\n                                spacing={24}\n                                direction=\"row\"\n                                justify=\"center\"\n                                alignItems=\"flex-start\"\n                            >\n                                <Grid item xs={4}>\n                                    <Grid\n                                        container\n                                        direction=\"row\"\n                                        justify=\"flex-end\"\n                                        alignItems=\"flex-start\"\n                                    >\n                                        <TextField\n                                            id=\"outlined-name\"\n                                            label=\"First Name\"\n                                            className={classes.textField}\n                                            value={this.props.conFirstName}\n                                            name=\"conFirstName\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            disabled={!this.state.editable}\n                                            onChange={this.handleInputChange}\n                                        // fullWidth\n                                        />\n                                        <Grid item xs>\n                                            <TextField\n                                                id=\"outlined-name\"\n                                                label=\"Last Name\"\n                                                className={classes.textField}\n                                                value={this.state.conLastName}\n                                                name=\"conLastName\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                fullWidth\n                                                disabled={!this.state.editable}\n                                                onChange={this.handleInputChange}\n                                            />\n                                        </Grid>\n                                    </Grid>\n                                    <TextField\n                                        id=\"outlined-number\"\n                                        label=\"Phone Number\"\n                                        value={this.state.conPhone}\n                                        name=\"conPhone\"\n                                        type=\"Phone Number\"\n                                        className={classes.textField}\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        disabled={!this.state.editable}\n                                        onChange={this.handleInputChange}\n                                    />\n                                    <TextField\n                                        id=\"outlined-email-input\"\n                                        label=\"Email\"\n                                        className={classes.textField}\n                                        fullWidth\n                                        type=\"email\"\n                                        name=\"conEmail\"\n                                        autoComplete=\"email\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        value={this.state.conEmail}\n                                        disabled={!this.state.editable}\n                                        onChange={this.handleInputChange}\n                                    />\n                                    <TextField\n                                        select\n                                        id=\"outlined-with-placeholder\"\n                                        label=\"Contractor Standing\"\n                                        className={classes.textField}\n                                        fullWidth\n                                        value={this.state.conStand}\n                                        onChange={this.handleChange('contractorStand')}\n                                        SelectProps={{\n                                            MenuProps: {\n                                                className: classes.menu,\n                                            },\n                                        }}\n                                        helperText=\"Choose one\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                    >\n                                        {contractorStand.map(option => (\n                                            <MenuItem key={option.value} value={option.value}>\n                                                {option.value}\n                                            </MenuItem>\n                                        ))}\n                                    </TextField>\n                                    <W9CheckBox />\n                                </Grid>\n                                <Grid item xs={4}>\n                                    <TextField\n                                        id=\"outlined-full-width\"\n                                        label=\"Type of Certifcation / Numbers\"\n                                        placeholder=\"Type of Certifcation / Numbers\"\n                                        value={this.state.conCert}\n                                        name=\"conCert\"\n                                        fullWidth\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        disabled={!this.state.editable}\n                                        onChange={this.handleInputChange}\n                                    />\n                                    <TextField\n                                        id=\"outlined-full-width\"\n                                        label=\"Pricing\"\n                                        placeholder=\"Pricing\"\n                                        value={this.state.conPrice}\n                                        name=\"conPrice\"\n                                        fullWidth\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        disabled={!this.state.editable}\n                                        onChange={this.handleInputChange}\n                                    />\n                                    <TextField\n                                        id=\"outlined-multiline-static\"\n                                        label=\"Notes\"\n                                        multiline\n                                        fullWidth\n                                        rows=\"10\"\n                                        defaultValue=\"Default Value\"\n                                        className={classes.textField}\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        value={this.state.conNotes}\n                                        name=\"conNotes\"\n                                        disabled={!this.state.editable}\n                                        onChange={this.handleInputChange}\n                                    />\n                                </Grid>\n                                <Grid item xs={3}>\n                                    <TextField\n                                        id=\"outlined-read-only-input\"\n                                        defaultValue=\"Billing Information\"\n                                        className={classes.textField}\n                                        fullWidth\n                                        margin=\"normal\"\n                                        InputProps={{\n                                            readOnly: true,\n                                        }}\n                                        variant=\"outlined\"\n                                    />\n                                    <TextField\n                                        id=\"outlined-helperText\"\n                                        label=\"Location Name\"\n                                        defaultValue=\"Location Name\"\n                                        fullWidth\n                                        className={classes.textField}\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        value={this.state.conLocationName}\n                                        name=\"conLocationName\"\n                                        disabled={!this.state.editable}\n                                        onChange={this.handleInputChange}\n                                    />\n                                    <TextField\n                                        id=\"outlined-helperText\"\n                                        label=\"Street Address\"\n                                        defaultValue=\"Street Address\"\n                                        fullWidth\n                                        className={classes.textField}\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        value={this.state.conStreetAddress}\n                                        name=\"conStreetAddress\"\n                                        disabled={!this.state.editable}\n                                        onChange={this.handleInputChange}\n                                    />\n                                    <Grid\n                                        container\n                                        direction=\"row\"\n                                        justify=\"flex-end\"\n                                        alignItems=\"flex-start\"\n                                    >\n                                        <TextField\n                                            id=\"outlined-helperText\"\n                                            label=\"City\"\n                                            defaultValue=\"City\"\n                                            className={classes.textField}\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            value={this.state.conCity}\n                                            name=\"conCity\"\n                                            disabled={!this.state.editable}\n                                            onChange={this.handleInputChange}\n                                        />\n                                        <Grid item xs>\n                                            <TextField\n                                                id=\"outlined-helperText\"\n                                                label=\"State/Province\"\n                                                defaultValue=\"State\"\n                                                className={classes.textField}\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                fullWidth\n                                                value={this.state.conState}\n                                                name=\"conState\"\n                                                disabled={!this.state.editable}\n                                                onChange={this.handleInputChange}\n                                            />\n                                        </Grid>\n                                    </Grid>\n                                    <Grid\n                                        container\n                                        direction=\"row\"\n                                    // justify=\"flex-end\"\n                                    // alignItems=\"flex-start\"\n                                    >\n                                        <TextField\n                                            id=\"outlined-helperText\"\n                                            label=\"Postal / Zip Code\"\n                                            defaultValue=\"Zip Code\"\n                                            className={classes.textField}\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            value={this.state.conZipCode}\n                                            name=\"conZipCode\"\n                                            disabled={!this.state.editable}\n                                            onChange={this.handleInputChange}\n                                        />\n                                        {/* <Grid item xs>\n                                            <TextField\n                                                id=\"outlined-select-currency\"\n                                                select\n                                                label=\"Country\"\n                                                className={classes.textField}\n                                                value={this.state.country}\n                                                onChange={this.handleChange('country')}\n                                                fullWidth\n                                                SelectProps={{\n                                                    MenuProps: {\n                                                        className: classes.menu,\n                                                    },\n                                                }}\n                                                helperText=\"Please select your country\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                            >\n                                                {countries.map(option => (\n                                                    <MenuItem key={option.value} value={option.value}>\n                                                        {option.value}\n                                                    </MenuItem>\n                                                ))}\n                                            </TextField>\n                                        </Grid> */}\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </form>\n                    </CardContent>\n                </Card>\n            </div>\n        )\n    }\n};\n\n\nContractCard.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ContractCard);","import React, { Component } from \"react\";\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport API from \"../utils/API\";\nimport Navbar from \"../components/Navbar\";\nimport Button from '@material-ui/core/Button';\nimport Geocode from \"react-geocode\";\nimport Grid from '@material-ui/core/Grid';\nimport ContractCard from '../components/ContractCard';\nimport googleMaps from \"../utils/keys\"\n\nconst API_KEY2 = googleMaps.key\n\nGeocode.setApiKey(API_KEY2);\n\n\nconst style = {\n    width: \"50%\",\n    hieght: \"50%\"\n}\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    container: {\n        gridGap: `${theme.spacing.unit * 3}px`,\n    },\n    paper: {\n        padding: theme.spacing.unit * 2,\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n});\n\nexport class TestMap extends Component {\n    state = {\n        showingInfoWindow: false,\n        activeMarker: {},\n        selectedPlace: {},\n        contractors: [],\n        clients: [],\n        coords: {}\n    };\n\n    componentDidMount() {\n        this.loadContractors();\n        this.loadClients();\n    };\n\n    loadContractors = () => {\n        API.getContractors()\n            .then(res => {\n                console.log(\"contractor \", res.data)\n                this.setState({\n                    contractors: res.data,\n                })\n            })\n            .catch(err => console.log(err));\n    };\n\n    loadClients = () => {\n        API.getClients()\n            .then(res => {\n                console.log(\"client \", res.data)\n                this.setState({\n                    clients: res.data,\n                })\n            })\n            .catch(err => console.log(err));\n    };\n\n    onMarkerClick = (props, marker, e) => {\n        this.setState({\n            selectedPlace: props,\n            activeMarker: marker,\n            showingInfoWindow: true,\n        });\n    }\n\n    onClickAssign = () => {\n        console.log(\"assigned\");\n    }\n\n    onMapClicked = () => {\n        if (this.state.showingInfoWindow) {\n            this.setState({\n                showingInfoWindow: false,\n                activeMarker: null\n            })\n        }\n    };\n\n    addressSearch = () => {\n        Geocode.fromAddress(this.state.search).then(\n            response => {\n                const { lat, lng } = response.results[0].geometry.location;\n                this.setState({\n                    coords: { lat, lng }\n                });\n                console.log(lat, lng);\n            },\n            error => {\n                console.error(error);\n            }\n        );\n    }\n\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    render() {\n        // const { classes } = props;\n\n        console.log(\"State: \", this.state)\n        return (\n            <div>\n                <Grid container spacing={24}>\n                    <Grid item xs={24} sm={12}>\n\n                        <Navbar\n                            onClick={this.addressSearch}\n                            onChange={this.handleInputChange}\n                            //search is equivalent to name but push through props\n                            value={this.state.search}\n                        />\n                    </Grid>\n\n                    <Grid item xs={6} sm={3}>\n                        <ContractCard />\n                    </Grid>\n\n                    <Grid item xs={12} sm={6}>\n                        <Button onClick={() => { debugger; this.onClickAssign() }}>\n                            Select a Contractor on the map below, then select this button to assign. </Button>\n                        <Map\n                            google={this.props.google}\n                            zoom={12}\n                            style={style}\n                            initialCenter={{\n                                lat: 32.852721,\n                                lng: -117.182762\n                            }}\n                            onClick={this.onMapClicked}\n                        >\n                            <Marker\n                                position={this.state.coords}\n                            />\n                            {this.state.clients.map(client => (\n                                <Marker\n                                    onClick={this.onMarkerClick}\n                                    name={client.billing.location.locationName}\n                                    title={client.contactPerson.firstName + \" \" + client.contactPerson.lastName}\n                                    position={client.billing.location.coords}\n                                    key={client._id}\n                                    clientID={client._id}\n                                    clientID={client._id}\n                                    icon=\"http://maps.google.com/mapfiles/ms/icons/green-dot.png\"\n                                />\n                            ))}\n                            {this.state.contractors.map(contractor => (\n                                <Marker\n                                    onClick={this.onMarkerClick}\n                                    name={contractor.location.locationName}\n                                    title={contractor.firstName + \" \" + contractor.lastName}\n                                    position={contractor.location.coords}\n                                    location={contractor.location.streetNumber + \" \" +\n                                        contractor.location.streetName + \" \" +\n                                        contractor.location.cityName + \" \" +\n                                        contractor.location.state + \" \" + contractor.location.zipCode}\n                                    key={contractor._id}\n                                    contractorID={contractor._id}\n                                    contractorID={contractor._id}\n                                    icon=\"http://maps.google.com/mapfiles/ms/icons/blue-dot.png\"\n                                />\n                            ))}\n                            <InfoWindow\n                                marker={this.state.activeMarker}\n                                visible={this.state.showingInfoWindow}>\n                                <div>\n                                    <h1>{this.state.selectedPlace.name}</h1>\n                                    <p>{this.state.selectedPlace.title}</p>\n                                    <p>{this.state.selectedPlace.location}</p>\n                                </div>\n                            </InfoWindow>\n                        </Map>\n                    </Grid>\n                    <Grid item xs={6} sm={3}>\n                        <ContractCard />\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\n\n\nexport default GoogleApiWrapper({\n    apiKey: API_KEY2\n})(TestMap)","import React, { Component } from \"react\";\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport API from \"../../../utils/API\";\nimport Navbar from \"../../Navbar\";\nimport Button from '@material-ui/core/Button';\nimport Geocode from \"react-geocode\";\nimport Grid from '@material-ui/core/Grid';\n\n\n\nGeocode.setApiKey(\"AIzaSyBqnB1s-zvouH1_skf3WKRjE6uhq_5M3rI\");\n\n\nconst style = {\n    width: \"50%\",\n    hieght: \"50%\"\n}\n\nexport class TestMap extends Component {\n    state = {\n        showingInfoWindow: false,\n        activeMarker: {},\n        selectedPlace: {},\n        contractors: [],\n        // coords: {}\n    };\n\n    componentDidMount() {\n        this.loadContractors();\n    };\n\n    loadContractors = () => {\n        API.getContractors()\n            .then(res => {\n                console.log(\"contractor \", res.data)\n                this.setState({\n                    contractors: res.data,\n                })\n            })\n            .catch(err => console.log(err));\n    };\n\n    onMarkerClick = (props, marker, e) => {\n        this.setState({\n            selectedPlace: props,\n            activeMarker: marker,\n            showingInfoWindow: true,\n        });\n    }\n\n    onClickAssign = () => {\n        console.log(\"assigned\");\n    }\n\n    onMapClicked = () => {\n        if (this.state.showingInfoWindow) {\n            this.setState({\n                showingInfoWindow: false,\n                activeMarker: null\n            })\n        }\n    };\n\n    addressSearch = () => {\n        Geocode.fromAddress(this.state.search).then(\n            response => {\n                const { lat, lng } = response.results[0].geometry.location;\n                this.setState({\n                    coords: { lat, lng }\n                });\n                console.log(lat, lng);\n            },\n            error => {\n                console.error(error);\n            }\n        );\n    }\n\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    render() {\n        console.log(\"State: \", this.state)\n        return (\n            <div>\n            {/* <Navbar\n            onClick={this.addressSearch}\n            onChange={this.handleInputChange}\n            //search is equivalent to name but push through props\n            value={this.state.search}\n            /> */}\n            <Grid container spacing={8}>\n                <div>\n                    <Grid item xs={22} sm={12}>\n                        <Button onClick={() => { debugger; this.onClickAssign() }}>\n                            Select a Contractor on the map below, then select this button to assign. </Button>\n                        <Map\n                            google={this.props.google}\n                            zoom={12}\n                            style={style}\n                            initialCenter={{\n                                lat: 32.852721,\n                                lng: -117.182762\n                            }}\n                            onClick={this.onMapClicked}\n                        >\n                            <Marker\n                                position={this.state.position}\n                            />\n                            {this.state.contractors.map(contractor => (\n                                <Marker\n                                    onClick={this.onMarkerClick}\n                                    name={contractor.location.locationName}\n                                    title={contractor.firstName + \" \" + contractor.lastName}\n                                    position={contractor.location.coords}\n                                    location={contractor.location.streetNumber + \" \" +\n                                        contractor.location.streetName + \" \" +\n                                        contractor.location.cityName + \" \" +\n                                        contractor.location.state + \" \" + contractor.location.zipCode}\n                                    key={contractor._id}\n                                    contractorID={contractor._id}\n                                    contractorID={contractor._id}\n                                />\n                            ))}\n                            <InfoWindow\n\n                                marker={this.state.activeMarker}\n                                visible={this.state.showingInfoWindow}>\n                                <div>\n                                    <h1>{this.state.selectedPlace.name}</h1>\n                                    <p>{this.state.selectedPlace.title}</p>\n                                    <p>{this.state.selectedPlace.location}</p>\n                                </div>\n                            </InfoWindow>\n                        </Map>\n                    </Grid>\n                </div>\n\n            </Grid>\n            </div>\n\n        );\n    }\n}\n\n\nexport default GoogleApiWrapper({\n    apiKey: \"AIzaSyBqnB1s-zvouH1_skf3WKRjE6uhq_5M3rI\"\n})(TestMap)","import React from 'react';\n// import MapPage from \"../components/Map\";\nimport Navbar from \"../components/Navbar\";\nimport TestMap from \"../components/Map/TestMap\"\nimport ContractCard from '../components/ContractCard';\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    container: {\n        gridGap: `${theme.spacing.unit * 3}px`,\n    },\n    paper: {\n        padding: theme.spacing.unit * 2,\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n});\n\nfunction Googlemappy(props) {\n    const { classes } = props;\n\n    return (\n        <div>\n            <Grid container spacing={24}>\n                <Grid item xs={24} sm={12}>\n                <Navbar\n                    // onClick={this.addressSearch}\n                    // onChange={this.handleInputChange}\n                    // //search is equivalent to name but push through props\n                    // value={this.state.search}\n                    />\n                </Grid>\n                <Grid item xs={6} sm={3}>\n                    <ContractCard className={classes.paper}>xs=6 sm=3</ContractCard>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <TestMap className={classes.paper}>xs=6 sm=3</TestMap>\n                </Grid>\n                <Grid item xs={6} sm={3}>\n                    <ContractCard className={classes.paper}>xs=6 sm=3</ContractCard>\n                </Grid>\n            </Grid>\n            {/* <MapPage /> */}\n            {/* <TestMap /> */}\n        </div>\n    )\n}\n\nGooglemappy.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\n\nexport default withStyles(styles)(Googlemappy);\n","import React, { Component } from \"react\";\n// import Navbar from \"../Navbar\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\n// import CardActions from '@material-ui/core/CardActions';\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n// import classNames from 'classnames';\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { white } from \"@material-ui/core/colors\";\nimport API from \"../../utils/API\";\n// import FormattedInputs from \"../NewAppointmentForm/form/PhoneNumber\";\n\nconst styles = theme => ({\n  cardHeader: {\n    background: `#4caf50`,\n    color: white\n  },\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  grow: {\n    flexGrow: 1\n  },\n  root: {\n    flexGrow: 1\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit\n  },\n  dense: {\n    marginTop: 16\n  },\n  menu: {\n    width: 200\n  },\n  card: {\n    minWidth: 275\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\"\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  }\n});\n\nconst countries = [\n  {\n    value: \"USA\"\n  },\n  {\n    value: \"UK\"\n  },\n  {\n    value: \"JAP\"\n  }\n];\n\nconst clientType = [\n  {\n    value: \"Investigation\"\n  },\n  {\n    value: \"Workers Compensation\"\n  },\n  {\n    value: \"Insurance\"\n  },\n  {\n    value: \"Custom\"\n  }\n];\n\nclass ClientCard extends React.Component {\n  state = {\n    clients: [],\n    clientType: this.props.clientType,\n    country: \"\",\n    editable: false,\n    clientFirstName: this.props.clientFirstName,\n    clientLastName: this.props.clientLastName,\n    billContact: this.props.billContact,\n    clientPhone: this.props.clientPhone,\n    clientEmail: this.props.clientEmail,\n    companyName: this.props.companyName,\n    position: this.props.position,\n    billPhone: this.props.billPhone,\n    billEmail: this.props.billEmail,\n    clientCity: this.props.clientCity,\n    clientState: this.props.clientState,\n    // clientStreetNumber: this.props.clientStreetNumber,\n    clientStreetName: this.props.clientStreetName,\n    idToUpdate: this.props.idToUpdate,\n    objectToUpdate: {}\n  };\n\n  componentDidMount() {\n    this.loadClients();\n  }\n\n  loadClients = () => {\n    API.getClients()\n      .then(res => {\n        console.log(res.data);\n        this.setState({\n          clients: res.data\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value\n    });\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n        [name]: value,\n    });\n};\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n      // idToUpdate: this.state.client._id,\n      // updateToApply: event.target.value\n    });\n  };\n\n  handleEditMode = () => {\n    this.setState({\n      editable: true\n    });\n  };\n\n  updateDB = idToUpdate => {\n    // console.log(idToUpdate, this.state)\n    let objIdToUpdate = null;\n    this.state.clients.forEach(client => {\n      if (client.id == idToUpdate) {\n        objIdToUpdate = client._id;\n      }\n    });\n    console.log({\n      id: idToUpdate,\n      objectToUpdate: this.state\n    });\n    API.updateClient({\n      id: objIdToUpdate,\n      objectToUpdate: this.state\n    });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    API.updateClient({\n      clientFirstName: this.state.clientFirstName,\n      clientLastName: this.state.clientLastName,\n      billContact: this.state.billContact,\n      clientPhone: this.state.clientPhone,\n      clientEmail: this.state.clientEmail,\n      companyName: this.state.companyName,\n      position: this.state.position,\n      billPhone: this.state.billPhone,\n      billEmail: this.state.billEmail,\n      clientCity: this.state.clientCity,\n      clientState: this.state.clientState,\n      clientStreetNumber: this.state.clientStreetNumber,\n      clientStreetName: this.state.clientStreetName\n    })\n      .then(res => console.log(\"Information updated\"))\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div>\n        <Card className={classes.card}>\n          <CardContent>\n            <AppBar position=\"static\" className={classes.cardHeader}>\n              <Toolbar>\n                <Typography\n                  variant=\"h6\"\n                  color=\"inherit\"\n                  className={classes.grow}\n                >\n                  Client Contact Card\n                </Typography>\n                <Button color=\"inherit\" onClick={this.handleEditMode}>\n                  Edit\n                </Button>\n                <Button\n                  color=\"inherit\"\n                  // onClick={this.handleFormSubmit}\n                  onClick={() =>\n                    this.updateDB(\n                      this.state.idToUpdate,\n                      this.state.updateToApply\n                    )\n                  }\n                  disabled={\n                    !(\n                      this.state.clientFirstName &&\n                      this.state.clientLastName &&\n                      this.state.clientFirstName &&\n                      this.state.clientLastName &&\n                      this.state.billContact &&\n                      this.state.clientPhone &&\n                      this.state.clientEmail &&\n                      this.state.companyName &&\n                      this.state.position &&\n                      this.state.billPhone &&\n                      this.state.billEmail &&\n                      this.state.clientCity &&\n                      this.state.clientState &&\n                      this.state.clientStreetNumber &&\n                      this.state.clientStreetName\n                    )\n                  }\n                >\n                  Submit\n                </Button>\n              </Toolbar>\n            </AppBar>\n            <form className={classes.container} noValidate autoComplete=\"off\">\n              <Grid\n                container\n                spacing={24}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"flex-start\"\n              >\n                <Grid item xs={4}>\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-end\"\n                    alignItems=\"flex-start\"\n                  >\n                    <TextField\n                      id=\"outlined-name\"\n                      label=\"First Name\"\n                      className={classes.textField}\n                      value={this.state.clientFirstName}\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      name=\"clientFirstName\"\n                      disabled={!this.state.editable}\n                      onChange={this.handleInputChange}\n                      // onChange={() => this.setState({ idToUpdate: this.state.client._id })}\n                      // onChange={e => this.setState({ updateToApply: e.target.value })}\n                      // fullWidth\n                    />\n                    <Grid item xs>\n                      <TextField\n                        id=\"outlined-name\"\n                        label=\"Last Name\"\n                        className={classes.textField}\n                        value={this.state.clientLastName}\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        fullWidth\n                        name=\"clientLastName\"\n                        disabled={!this.state.editable}\n                        onChange={this.handleInputChange}\n                      />\n                    </Grid>\n                  </Grid>\n                  <TextField\n                    id=\"outlined-number\"\n                    label=\"Phone Number\"\n                    value={this.state.clientPhone}\n                    type=\"Phone Number\"\n                    className={classes.textField}\n                    InputLabelProps={{\n                      shrink: true\n                    }}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name=\"clientPhone\"\n                    disabled={!this.state.editable}\n                    onChange={this.handleInputChange}\n                  />\n                  <TextField\n                    id=\"outlined-email-input\"\n                    label=\"Email\"\n                    className={classes.textField}\n                    fullWidth\n                    type=\"email\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    value={this.state.clientEmail}\n                    name=\"clientEmail\"\n                    disabled={!this.state.editable}\n                    onChange={this.handleInputChange}\n                  />\n                  <TextField\n                    select\n                    id=\"outlined-with-placeholder\"\n                    label=\"Type of Client\"\n                    className={classes.textField}\n                    fullWidth\n                    value={this.state.clientType}\n                    onChange={this.handleChange(\"clientType\")}\n                    SelectProps={{\n                      MenuProps: {\n                        className: classes.menu\n                      }\n                    }}\n                    helperText=\"Choose one\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                  >\n                    {clientType.map(option => (\n                      <MenuItem key={option.value} value={option.value}>\n                        {option.value}\n                      </MenuItem>\n                    ))}\n                  </TextField>\n                </Grid>\n                <Grid item xs={4}>\n                  <TextField\n                    id=\"outlined-full-width\"\n                    label=\"Company / Client Name\"\n                    placeholder=\"Company / Client Name\"\n                    value={this.state.companyName}\n                    name=\"companyName\"\n                    fullWidth\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    disabled={!this.state.editable}\n                    onChange={this.handleInputChange}\n                    InputLabelProps={{\n                      shrink: true\n                    }}\n                  />\n                  <TextField\n                    id=\"outlined-full-width\"\n                    label=\"Position\"\n                    placeholder=\"Position\"\n                    fullWidth\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    value={this.state.position}\n                    name=\"position\"\n                    disabled={!this.state.editable}\n                    onChange={this.handleInputChange}\n                    InputLabelProps={{\n                      shrink: true\n                    }}\n                  />\n                  <TextField\n                    id=\"outlined-multiline-static\"\n                    label=\"Notes\"\n                    multiline\n                    fullWidth\n                    rows=\"10\"\n                    className={classes.textField}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item xs={3}>\n                  <TextField\n                    id=\"outlined-read-only-input\"\n                    defaultValue=\"Billing Information\"\n                    className={classes.textField}\n                    fullWidth\n                    margin=\"normal\"\n                    InputProps={{\n                      readOnly: true\n                    }}\n                    variant=\"outlined\"\n                  />\n                  <TextField\n                    id=\"outlined-full-width\"\n                    label=\"Billing Contact Person\"\n                    placeholder=\"Billing Contact Person\"\n                    value={this.state.billContact}\n                    name=\"billContact\"\n                    fullWidth\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    disabled={!this.state.editable}\n                    onChange={this.handleInputChange}\n                    InputLabelProps={{\n                      shrink: true\n                    }}\n                  />\n                  {/* <TextField\n                                        id=\"outlined-helperText\"\n                                        label=\"Contact Name\"\n                                        value={this.state.billContact}\n                                        value={this.props.billContact}\n                                        name=\"billContact\"\n                                        fullWidth\n                                        className={classes.textField}\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        disabled={!this.state.editable}\n                                        onChange={this.handleInputChange}\n                                    /> */}\n                  <TextField\n                    id=\"outlined-number\"\n                    label=\"Billing Phone Number\"\n                    value={this.props.billPhone}\n                    name=\"billPhone\"\n                    type=\"Phone Number\"\n                    className={classes.textField}\n                    disabled={!this.state.editable}\n                    onChange={this.handleInputChange}\n                    InputLabelProps={{\n                      shrink: true\n                    }}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                  />\n\n                  <TextField\n                    id=\"outlined-email-input\"\n                    label=\"Billing Email\"\n                    className={classes.textField}\n                    fullWidth\n                    type=\"email\"\n                    name=\"billEmail\"\n                    autoComplete=\"email\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    value={this.state.billEmail}\n                    disabled={!this.state.editable}\n                    onChange={this.handleInputChange}\n                  />\n\n                  <TextField\n                    id=\"outlined-helperText\"\n                    label=\"Street Address\"\n                    defaultValue=\"Street Address\"\n                    fullWidth\n                    className={classes.textField}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    //have to make street number and name one property to make it editable\n                    value={this.state.clientStreetName}\n                    name=\"clientStreetNumber clientStreeName\"\n                    disabled={!this.state.editable}\n                    onChange={this.handleInputChange}\n                  />\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-end\"\n                    alignItems=\"flex-start\"\n                  >\n                    <TextField\n                      id=\"outlined-helperText\"\n                      label=\"City\"\n                      defaultValue=\"City\"\n                      className={classes.textField}\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      value={this.state.clientCity}\n                      name=\"clientCity\"\n                      disabled={!this.state.editable}\n                      onChange={this.handleInputChange}\n                    />\n                    <Grid item xs>\n                      <TextField\n                        id=\"outlined-helperText\"\n                        label=\"State/Province\"\n                        defaultValue=\"State\"\n                        className={classes.textField}\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        fullWidth\n                        value={this.state.clientState}\n                        name=\"clientState\"\n                        disabled={!this.state.editable}\n                        onChange={this.handleInputChange}\n                      />\n                    </Grid>\n                  </Grid>\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-end\"\n                    alignItems=\"flex-start\"\n                  >\n                    <TextField\n                      id=\"outlined-helperText\"\n                      label=\"Postal / Zip Code\"\n                      defaultValue=\"Zip Code\"\n                      className={classes.textField}\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      value={this.state.clientZipCode}\n                      name=\"clienZipCode\"\n                      disabled={!this.state.editable}\n                      onChange={this.handleInputChange}\n                    />\n                    <Grid item xs>\n                      {/* <TextField\n                                          id=\"outlined-select-currency\"\n                                          select\n                                          label=\"Country\"\n                                          className={classes.textField}\n                                          value={this.state.country}\n                                          onChange={this.handleChange('country')}\n                                          fullWidth\n                                          SelectProps={{\n                                              MenuProps: {\n                                                  className: classes.menu,\n                                              },\n                                          }}\n                                          helperText=\"Please select your country\"\n                                          margin=\"normal\"\n                                          variant=\"outlined\"\n                                      >\n                                          {countries.map(option => (\n                                              <MenuItem key={option.value} value={option.value}>\n                                                  {option.value}\n                                              </MenuItem>\n                                          ))}\n                                      </TextField> */}\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </form>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n}\n\nClientCard.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(ClientCard);\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { green, white } from \"@material-ui/core/colors\";\nimport {\n  AppBar,\n  Toolbar,\n  ExpansionPanel,\n  ExpansionPanelSummary,\n  ExpansionPanelDetails,\n  Typography,\n  Card,\n  CardHeader,\n  CardContent,\n  TextField,\n  Grid,\n  Fab\n} from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport API from \"../../utils/API\";\n\nconst styles = {\n  card: {\n    minWidth: 300,\n    minHeight: 200\n    // justifyContent: \"center\",\n  },\n  cardHeader: {\n    background: `#dfafea`,\n    color: white\n  },\n  cardContent: {\n    width: \"100%\"\n  },\n  input: {\n    minWidth: \"100%\"\n  },\n  hCenter: {\n    display: \"flex\"\n    // alignItems: \"center\"\n    // justifyContent: \"center\"\n  },\n  fab: {\n    display: \"flex\"\n    // justifyContent:\n  }\n};\n\nclass NewAppointmentCard extends React.Component {\n  state = {\n    // dateInput: \"\",\n    // apptDate: \"\",\n    assigneeFirstName: \"\",\n    assigneeLastName: \"\",\n    // assigneePhone: \"\",\n    adjusterFirstName: \"\",\n    adjusterLastName: \"\",\n    // adjusterPhone: \"\",\n    // assignementType: \"\",\n    // multiline: \"\",\n    refName: \"\",\n    refNumber: \"\",\n    locationName: \"\",\n    address: \"\",\n    city: \"\",\n    state: \"\",\n    postalCode: \"\"\n    // employeeAssign: \"\"\n  };\n\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.checked });\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    API.saveAppt({\n      // dateInput: this.state.dateInput,\n      // apptDate: this.state.apptDate,\n      assigneeFirstName: this.state.assigneeFirstName,\n      assigneeLastName: this.state.assigneeLastName,\n      // assigneePhone: this.state.assigneePhone,\n      adjusterFirstName: this.state.adjusterFirstName,\n      adjusterLastName: this.state.adjusterLastName,\n      // adjusterPhone: this.state.adjusterPhone,\n      // assignementType: this.state.assignementType,\n      // notes: this.state.multiline,\n      refName: this.state.refName,\n      refNumber: this.state.refNumber,\n      locationName: this.state.locationName,\n      address: this.state.address,\n      city: this.state.city,\n      state: this.state.state,\n      postalCode: this.state.postalCode\n      // employeeAssign: this.state.employeeAssign\n    });\n    console.log(this.state);\n  };\n\n  render(props) {\n    const { classes } = this.props;\n    return (\n      <div>\n        <ExpansionPanel>\n          <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n            <AppBar position=\"static\">\n              <Toolbar>\n                <Typography\n                  variant=\"h6\"\n                  color=\"inherit\"\n                  className={classes.grow}\n                >\n                  New Appointment\n                </Typography>\n              </Toolbar>\n            </AppBar>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails>\n            <Grid container item xs={12}>\n              <form\n                className={classes.input}\n                autoComplete=\"off\"\n                onSubmit={this.handleFormSubmit}\n              >\n                <Grid container spacing={16}>\n                  {/* Date the appointment was called in to be assigned */}\n                  {/* <Grid item xs={12}>\n                    <Date fullWidth />\n                  </Grid> */}\n                  {/* Date the assignment will be taking place on */}\n\n                  {/* <Grid item xs={12}>\n                    <DateTime />\n                  </Grid> */}\n\n                  {/* Who will is assigning the assignment */}\n                  {/* Assignee Last Name for searchability purposes */}\n                  <Grid item xs={12} md={6} lg={6}>\n                    <TextField\n                      fullWidth\n                      id=\"assigneeFirstName\"\n                      label=\"Assignee&#39;s First Name\"\n                      className={classes.textField}\n                      name=\"assigneeFirstName\"\n                      value={this.props.assigneeFirstName}\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      onChange={this.handleInputChange}\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} md={6} lg={6}>\n                    <TextField\n                      id=\"assigneeLastName\"\n                      fullWidth\n                      label=\"Assignee&#39;s Last Name\"\n                      name=\"assigneeLastName\"\n                      className={classes.textField}\n                      value={this.props.assigneeLastName}\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      onChange={this.handleInputChange}\n                    />\n                  </Grid>\n\n                  {/* <Grid item xs={12}>\n                    <PhoneNumber phone={this.state.assigneePhone} />\n                  </Grid> */}\n                  {/* Assignee's phone number to contact in case their our questions[???] */}\n                  <br />\n\n                  {/* Contact information for person paying for the assignment {typically an adjuster} */}\n\n                  {/* Reference Name for the file || Name need in order to bill out the assignment */}\n                  {/* Reference Number to be able to easily search for the assignemnt if one is not assign give default */}\n\n                  <Grid item xs={12} md={6} lg={6}>\n                    <TextField\n                      fullWidth\n                      id=\"adjusterFirstName\"\n                      label=\"Adjuster&#39;s First Name\"\n                      className={classes.textField}\n                      name=\"adjusterFirstName\"\n                      value={this.props.adjusterFirstName}\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      onChange={this.handleInputChange}\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} md={6} lg={6}>\n                    <TextField\n                      fullWidth\n                      id=\"adjusterLastName\"\n                      label=\"Adjuster&#39;s Last Name\"\n                      className={classes.textField}\n                      name=\"adjusterLastName\"\n                      value={this.props.adjusterLastName}\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      onChange={this.handleInputChange}\n                    />\n                  </Grid>\n\n                  {/* <Grid item xs={12}>\n                    <PhoneNumber />\n                  </Grid> */}\n\n                  <br />\n\n                  {/* Drop down selector with types off appointments to choose from */}\n                  {/* <Grid item xs={12}>\n                    <Type />\n                  </Grid> */}\n                  <br />\n\n                  {/* Notes section in case the client has special requests that need to be followed */}\n\n                  {/* <Grid item xs={8}>\n                    <TextField\n                      id=\"outlined-multiline-flexible\"\n                      label=\"Notes\"\n                      multiline\n                      fullWidth\n                      rowsMax=\"2\"\n                      name=\"multiline\"\n                      value={this.state.multiline}\n                      onChange={this.handleChange(\"multiline\")}\n                      className={classes.textField}\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      onChange={this.handleInputChange}\n                    />\n                  </Grid> */}\n\n                  <Grid item xs={6}>\n                    <TextField\n                      fullWidth\n                      id=\"Refname\"\n                      label=\"Reference Name\"\n                      className={classes.textField}\n                      name=\"refName\"\n                      value={this.props.refName}\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      onChange={this.handleInputChange}\n                    />\n                  </Grid>\n\n                  <Grid item xs={6}>\n                    <TextField\n                      fullWidth\n                      id=\"Refname\"\n                      label=\"Reference Number\"\n                      className={classes.textField}\n                      name=\"refNumber\"\n                      value={this.props.refNumber}\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      onChange={this.handleInputChange}\n                    />\n                  </Grid>\n\n                  {/* Assignment location information */}\n\n                  {/* Assignment location information */}\n                  <Grid item xs={12}>\n                    <TextField\n                      id=\"outlined-helperText\"\n                      label=\"Location Name\"\n                      fullWidth\n                      className={classes.textField}\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      onChange={this.handleInputChange}\n                      name=\"locationName\"\n                      value={this.props.locationName}\n                    />\n                  </Grid>\n                  <Grid item xs={6}>\n                    <TextField\n                      fullWidth\n                      id=\"outlined-helperText\"\n                      label=\"Street Address\"\n                      className={classes.textField}\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      onChange={this.handleInputChange}\n                      name=\"address\"\n                      value={this.props.address}\n                    />\n                  </Grid>\n\n                  <Grid item xs={6}>\n                    <TextField\n                      fullWidth\n                      id=\"outlined-helperText\"\n                      label=\"City\"\n                      className={classes.textField}\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      onChange={this.handleInputChange}\n                      name=\"city\"\n                      value={this.props.city}\n                    />\n                  </Grid>\n\n                  <Grid item xs={6}>\n                    <TextField\n                      fullWidth\n                      id=\"outlined-helperText\"\n                      label=\"State/Province\"\n                      className={classes.textField}\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      onChange={this.handleInputChange}\n                      name=\"state\"\n                      value={this.props.state}\n                    />\n                  </Grid>\n\n                  <Grid item xs={6}>\n                    <TextField\n                      fullWidth\n                      id=\"outlined-helperText\"\n                      label=\"Postal / Zip Code\"\n                      className={classes.textField}\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      onChange={this.handleInputChange}\n                      name=\"postalCode\"\n                      value={this.props.postalCode}\n                    />\n                  </Grid>\n\n                  {/* Which contractor will be covering the assignment */}\n                  {/* Date the contractor accepted the job || to avoid future problems */}\n\n                  {/* Name of the employee who assisted in taking the assignment */}\n                  <Grid item xs={12}>\n                    {/* <EmployeeAssisting /> */}\n                  </Grid>\n\n                  {/* Add Button to save the assignment to the database */}\n                  <Grid item xs={6}>\n                    <Fab\n                      color=\"danger\"\n                      aria-label=\"Add\"\n                      className={classes.fab}\n                      type=\"submit\"\n                    >\n                      <AddIcon />\n                    </Fab>\n                  </Grid>\n                </Grid>\n              </form>\n            </Grid>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(NewAppointmentCard);\n","import React, { Component } from \"react\";\nimport Navbar from \"../components/Navbar\";\nimport ClientCard from \"../components/ClientCard\";\nimport ContractCard from \"../components/ContractCard\";\nimport AppointmentCard from \"../components/AppointmentCard\";\nimport API from \"../utils/API\";\n\nclass Address extends Component {\n  state = {\n    clients: [],\n    contractors: [],\n    appointments: []\n  };\n\n  componentDidMount() {\n    this.loadContractors();\n    this.loadClients();\n    this.loadAppointments();\n  }\n\n  // componentDidUpdate() {\n  //   this.loadAppointments();\n  // }\n\n  loadClients = () => {\n    API.getClients()\n      .then(res => {\n        console.log(res.data);\n        this.setState({\n          clients: res.data\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  loadContractors = () => {\n    API.getContractors()\n      .then(res => {\n        console.log(\"contractor \", res.data);\n        this.setState({\n          contractors: res.data\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  loadAppointments = () => {\n    API.getAppts()\n      .then(res => {\n        console.log(res.data);\n        this.setState({\n          appointments: res.data\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  removeClient = id => {\n    //remove the card and not deleting from database\n  };\n\n  deleteClient = id => {\n    //deleting client from API\n  };\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value\n    });\n  };\n\n  render() {\n    console.log(\"State: \", this.state);\n    const { contractors, clients, appointments } = this.state;\n    return (\n      <div>\n        <Navbar />\n        <br />\n        {contractors.map(contractor => (\n          <ContractCard\n            // conStreetNumber={contractor.location.streetNumber}\n            conStreetAddress={contractor.address}\n            conFirstName={contractor.firstName}\n            conLastName={contractor.lastName}\n            conPhone={contractor.phone}\n            conEmail={contractor.email}\n            // conStand\n            conCert={contractor.certification}\n            conPrice={contractor.pricing}\n            conNotes={contractor.notes}\n            conLocationName={contractor.locationName}\n            conCity={contractor.city}\n            conState={contractor.state}\n            conZipCode={contractor.postalCode}\n          />\n        ))}\n        <br />\n        {clients.map(client => (\n          <ClientCard\n            companyName={client.name}\n            clientPhone={client.phone}\n            clientEmail={client.email}\n            position={client.position}\n            clientFirstName={client.firstName}\n            clientLastName={client.lastName}\n            billContact={client.billing.name}\n            clientStreetName={client.billing.address}\n            billPhone={client.billing.phone}\n            billEmail={client.billing.email}\n            clientCity={client.billing.city}\n            clientZipCode={client.billing.zipCode}\n            clientState={client.billing.state}\n            clientType={client.typeClient}\n            idToUpdate={client._id}\n          />\n        ))}\n        {appointments.map(appointment => (\n          <AppointmentCard\n            assigneeFirstName={appointment.assigneeFirstName}\n            assigneeLastName={appointment.assigneeLastName}\n            adjusterFirstName={appointment.adjusterFirstName}\n            adjusterLastName={appointment.adjusterLastName}\n            refName={appointment.refName}\n            refNumber={appointment.refNumber}\n            locationName={appointment.locationName}\n            address={appointment.address}\n            city={appointment.city}\n            state={appointment.state}\n            postalCode={appointment.postalCode}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Address;\n","import React from \"react\";\nimport Navbar from \"../components/Navbar\";\n\nfunction NoMatch() {\n  return (\n      <div>\n          <Navbar/>\n          <h1>404 Page Not Found</h1>\n      </div>\n  )\n}\n\nexport default NoMatch;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport classnames from \"classnames\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport red from \"@material-ui/core/colors/red\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\n\nconst styles = theme => ({\n  card: {\n    maxWidth: 400\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\" // 16:9\n  },\n  actions: {\n    display: \"flex\"\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\"\n  },\n  avatar: {\n    backgroundColor: red[500]\n  }\n});\n\nclass RecipeReviewCard extends React.Component {\n  state = { expanded: false };\n\n  handleExpandClick = () => {\n    this.setState(state => ({ expanded: !state.expanded }));\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Card className={classes.card}>\n        <CardHeader title=\"New Assignment\" subheader=\"Current Date/Time\" />\n        <CardContent>\n          <Typography component=\"p\">\n            This impressive paella is a perfect party dish and a fun meal to\n            cook together with your guests. Add 1 cup of frozen peas along with\n            the mussels, if you like.\n          </Typography>\n        </CardContent>\n        <CardActions className={classes.actions} disableActionSpacing>\n          <IconButton aria-label=\"Add to favorites\">\n            <FavoriteIcon />\n          </IconButton>\n          <IconButton aria-label=\"Share\">\n            <ShareIcon />\n          </IconButton>\n          <IconButton\n            className={classnames(classes.expand, {\n              [classes.expandOpen]: this.state.expanded\n            })}\n            onClick={this.handleExpandClick}\n            aria-expanded={this.state.expanded}\n            aria-label=\"Show more\"\n          >\n            <ExpandMoreIcon />\n          </IconButton>\n        </CardActions>\n      </Card>\n    );\n  }\n}\n\nRecipeReviewCard.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(RecipeReviewCard);\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { green } from \"@material-ui/core/colors\";\n\nimport { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\n\nconst styles = {\n  input: {\n    minWidth: \"100%\"\n  }\n};\n\nclass Standing extends React.Component {\n  state = {\n    age: \"\",\n    open: false\n  };\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleOpen = () => {\n    this.setState({ open: true });\n  };\n\n  render() {\n    const { classes, value } = this.props;\n    return (\n      <FormControl className={classes.input} fullWidth>\n        <InputLabel htmlFor=\"demo-controlled-open-select\">Standing</InputLabel>\n        <Select\n          open={this.state.open}\n          onClose={this.handleClose}\n          onOpen={this.handleOpen}\n          value={this.state.age}\n          onChange={this.handleChange}\n          inputProps={{\n            name: \"age\",\n            id: \"demo-controlled-open-select\"\n          }}\n          fullWidth\n        >\n          <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value={1}>Good-Preferred </MenuItem>\n          <MenuItem value={2}>Good</MenuItem>\n          <MenuItem value={3}>Bad</MenuItem>\n          <MenuItem value={4}>Issues</MenuItem>\n        </Select>\n      </FormControl>\n    );\n  }\n}\n\nexport default withStyles(styles)(Standing);\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { white } from \"@material-ui/core/colors\";\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  TextField,\n  Grid,\n  Fab,\n  Icon,\n  FormControl,\n  MenuItem,\n  Select,\n  InputLabel\n} from \"@material-ui/core\";\nimport Standing from \"./form/Standing\";\nimport W9CheckBox from \"./form/W9CheckBox\";\nimport API from \"../../utils/API\";\n\nconst styles = {\n  card: {\n    minWidth: 300,\n    minHeight: 200\n    // justifyContent: \"center\",\n  },\n  cardHeader: {\n    background: `#4caf50`,\n    color: white\n  },\n  cardContent: {\n    width: \"100%\"\n  },\n  form: {\n    minWidth: \"100%\"\n  },\n  TextField: {\n    minWidth: \"100%\"\n  },\n  hCenter: {\n    display: \"flex\"\n    // alignItems: \"center\"\n    // justifyContent: \"center\"\n  },\n  fab: {\n    display: \"flex\"\n    // justifyContent:\n  }\n};\n\nclass ContractorCard extends React.Component {\n  state = {\n    firstName: \"\",\n    lastName: \"\",\n    phone: \"\",\n    email: \"\",\n    // certification: \"\",\n    // standing: \"\",\n    pricing: \"\",\n    notes: \"\",\n    locationName: \"\",\n    address: \"\",\n    city: \"\",\n    state: \"\",\n    postalCode: \"\",\n    standingComp: {\n      age: \"\",\n      open: false\n    }\n  };\n\n  handleChange = event => {\n    const field = event.target.name;\n\n    const standingComp = this.state.standingComp;\n\n    standingComp[field] = event.target.value;\n\n    this.setState({\n      standingComp\n    });\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    API.saveContractor({\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      phone: this.state.phone,\n      email: this.state.email,\n      // certification: this.state.certification,\n      // standing: this.state.standing,\n      pricing: this.state.pricing,\n      notes: this.state.notes,\n      locationName: this.state.locationName,\n      address: this.state.address,\n      city: this.state.city,\n      state: this.state.state,\n      postalCode: this.state.postalCode\n    });\n    console.log(this.state);\n\n    this.setState({\n      firstName: \"\",\n      lastName: \"\",\n      phone: \"\",\n      email: \"\",\n      certification: \"\",\n      standing: \"\",\n      pricing: \"\",\n      notes: \"\",\n      location: \"\"\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    // const { standingComp } = this.state;\n    return (\n      <Card className={classes.card}>\n        <CardHeader title=\"Contractor\" className={classes.cardHeader} />\n        <CardContent>\n          <Grid container>\n            <form\n              className={classes.form}\n              autoComplete=\"off\"\n              onSubmit={this.handleFormSubmit}\n            >\n              <Grid item sm={12} md={12} lg={12}>\n                <TextField\n                  id=\"contractorFirstName\"\n                  placeholder=\"First Name\"\n                  className={classes.TextField}\n                  fullWidth\n                  label=\"First Name\"\n                  name=\"firstName\"\n                  value={this.state.firstName}\n                  onChange={this.handleInputChange}\n                />\n              </Grid>\n              <Grid item sm={12} md={12} lg={12}>\n                <TextField\n                  id=\"contractorLastName\"\n                  placeholder=\"Last Name\"\n                  className={classes.TextField}\n                  fullWidth\n                  label=\"LastName\"\n                  name=\"lastName\"\n                  value={this.state.lastName}\n                  onChange={this.handleInputChange}\n                />\n              </Grid>\n              <Grid item sm={12} md={12} lg={12}>\n                <TextField\n                  id=\"contractorPhone\"\n                  placeholder=\"Phone #\"\n                  type=\"tel\"\n                  className={classes.TextField}\n                  fullWidth\n                  label=\"Phone #\"\n                  name=\"phone\"\n                  value={this.state.phone}\n                  onChange={this.handleInputChange}\n                />\n              </Grid>\n              <Grid item sm={12} md={12} lg={12}>\n                <TextField\n                  id=\"contractorEmail\"\n                  placeholder=\"Email\"\n                  className={classes.TextField}\n                  fullWidth\n                  label=\"Email\"\n                  name=\"email\"\n                  value={this.state.email}\n                  onChange={this.handleInputChange}\n                />\n              </Grid>\n              {/* <Grid item sm={12} md={12} lg={12}> */}\n                {/* <Standing\n                  name=\"standing\"\n                  value={this.state.Standing}\n                  onChange={this.handleInputChange}\n                /> */}\n                {/* <FormControl className={classes.input} fullWidth>\n                  <InputLabel htmlFor=\"demo-controlled-open-select\">\n                    Standing\n                  </InputLabel>\n                  <Select\n                    open={this.state.standingComp.open}\n                    onClose={this.handleClose}\n                    onOpen={this.handleOpen}\n                    value={this.state.standingComp.age}\n                    onChange={this.handleChange}\n                    inputProps={{\n                      name: \"age\",\n                      id: \"demo-controlled-open-select\"\n                    }}\n                    fullWidth\n                  >\n                    <MenuItem value=\"\">\n                      <em>None</em>\n                    </MenuItem>\n                    <MenuItem value={1}>Good-Preferred </MenuItem>\n                    <MenuItem value={2}>Good</MenuItem>\n                    <MenuItem value={3}>Bad</MenuItem>\n                    <MenuItem value={4}>Issues</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid> */}\n              <Grid item sm={12} md={12} lg={12}>\n                <TextField\n                  id=\"contractorPricing\"\n                  placeholder=\"Pricing\"\n                  className={classes.TextField}\n                  fullWidth\n                  label=\"Pricing\"\n                  name=\"pricing\"\n                  value={this.state.pricing}\n                  onChange={this.handleInputChange}\n                />\n              </Grid>\n              <Grid item sm={12} md={12} lg={12}>\n                <TextField\n                  id=\"contractorNotes\"\n                  label=\"Notes\"\n                  multiline\n                  rowsMax=\"4 md={12} lg={12}\"\n                  value={this.state.multiline}\n                  className={classes.TextField}\n                  fullWidth\n                  name=\"notes\"\n                  value={this.state.notes}\n                  onChange={this.handleInputChange}\n                  margin=\"normal\"\n                />\n              </Grid>\n              <Grid item sm={12} md={12} lg={12}>\n                <TextField\n                  id=\"contractorLocation\"\n                  placeholder=\"Location\"\n                  className={classes.TextField}\n                  fullWidth\n                  label=\"Location\"\n                  name=\"locationName\"\n                  value={this.state.locationName}\n                  onChange={this.handleInputChange}\n                />\n              </Grid>\n              <Grid item sm={12} md={12} lg={12}>\n                <TextField\n                  id=\"contractorAddress\"\n                  placeholder=\"Address\"\n                  className={classes.TextField}\n                  fullWidth\n                  label=\"Address\"\n                  name=\"address\"\n                  value={this.state.address}\n                  onChange={this.handleInputChange}\n                />\n              </Grid>\n              <Grid item sm={12} md={12} lg={12}>\n                <TextField\n                  id=\"contractorCity\"\n                  placeholder=\"City\"\n                  className={classes.TextField}\n                  fullWidth\n                  label=\"City\"\n                  name=\"city\"\n                  value={this.state.city}\n                  onChange={this.handleInputChange}\n                />\n              </Grid>\n              <Grid item sm={12} md={12} lg={12}>\n                <TextField\n                  id=\"contractorState\"\n                  placeholder=\"State/Province\"\n                  className={classes.TextField}\n                  fullWidth\n                  label=\"State/Province\"\n                  name=\"state\"\n                  value={this.state.state}\n                  onChange={this.handleInputChange}\n                />\n              </Grid>\n              <Grid item sm={12} md={12} lg={12}>\n                <TextField\n                  id=\"contractorPostalCode\"\n                  placeholder=\"Postal Code\"\n                  className={classes.TextField}\n                  fullWidth\n                  label=\"Postal Code\"\n                  name=\"postalCode\"\n                  value={this.state.postalCode}\n                  onChange={this.handleInputChange}\n                />\n              </Grid>\n              <Grid item sm={12} md={12} lg={12}>\n                <W9CheckBox />\n              </Grid>\n              <Grid item sm={12} md={12} lg={12}>\n                <Fab\n                  color=\"primary\"\n                  aria-label=\"Add\"\n                  className={classes.fab}\n                  type=\"submit\"\n                >\n                  <AddIcon />\n                </Fab>\n              </Grid>\n            </form>\n          </Grid>\n        </CardContent>\n      </Card>\n    );\n  }\n}\n\nexport default withStyles(styles)(ContractorCard);\n","import React from 'react';\n// import PropTypes from 'prop-types';\n// import { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n// import Grid from '@material-ui/core/Grid';\n// import { renderComponent } from 'recompose';\n// import Notes from './Notes';\nimport AddressForm from \"./AddressForm\";\nfunction ApptCard() {\n    return (\n<Card>\n      <CardActionArea>\n\n      <CardContent>\n<Typography gutterBottom variant=\"h5\" component=\"h2\">\n            Lizard\n          </Typography>\n          <Typography component=\"p\">\n            Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\n            across all continents except Antarctica\n          </Typography>\n          <AddressForm />\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button size=\"small\" color=\"primary\">\n          Share\n        </Button>\n        <Button size=\"small\" color=\"primary\">\n          Learn More\n        </Button>\n        {/* <Notes />*/}\n      </CardActions>\n    </Card>\n\n  );\n}\n\nexport default ApptCard;","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { green } from \"@material-ui/core/colors\";\nimport { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\n\nconst styles = {\n  input: {\n    minWidth: \"100%\"\n  }\n};\n\nclass Type extends React.Component {\n  state = {\n    age: \"\",\n    open: false\n  };\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleOpen = () => {\n    this.setState({ open: true });\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <FormControl className={classes.input}>\n        <InputLabel htmlFor=\"demo-controlled-open-select\">Type of Assignment</InputLabel>\n        <Select\n          open={this.state.open}\n          onClose={this.handleClose}\n          onOpen={this.handleOpen}\n          value={this.state.age}\n          onChange={this.handleChange}\n          inputProps={{\n            name: \"age\",\n            id: \"demo-controlled-open-select\"\n          }}\n        >\n          <MenuItem value=\"\">\n            <em>Select Type</em>\n          </MenuItem>\n          <MenuItem value={1}>Medical </MenuItem>\n          <MenuItem value={2}>Legal</MenuItem>\n          <MenuItem value={3}>Statement</MenuItem>\n          <MenuItem value={4}>Meeting</MenuItem>\n          <MenuItem value={5}>Deposition</MenuItem>\n          <MenuItem value={6}>Custom</MenuItem>\n\n        </Select>\n      </FormControl>\n    );\n  }\n}\n\nexport default withStyles(styles)(Type);\n","import React, { PureComponent } from 'react';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider } from 'material-ui-pickers';\nimport { DateTimePicker } from 'material-ui-pickers';\n\nexport default class DateTime extends PureComponent {\n  state = {\n    selectedDate: new Date(),\n  };\n\n  handleDateChange = date => {\n    this.setState({ selectedDate: date });\n  };\n\n  render() {\n    const { selectedDate } = this.state;\n\n    return (\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <DateTimePicker\n                    label=\"Date of Appointment\"\n                    keyboard\n                    showTodayButton\n                    variant=\"outlined\"\n                     value={selectedDate} \n                     onChange={this.handleDateChange} \n                    />\n      </MuiPickersUtilsProvider>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider } from 'material-ui-pickers';\nimport { TimePicker } from 'material-ui-pickers';\nimport { DatePicker } from 'material-ui-pickers';\nimport { DateTimePicker } from 'material-ui-pickers';\n\nexport default class App extends PureComponent {\n  state = {\n    selectedDate: new Date(),\n  };\n\n  handleDateChange = date => {\n    this.setState({ selectedDate: date });\n  };\n\n  render() {\n    const { selectedDate } = this.state;\n\n    return (\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <DatePicker\n                    label=\"Date Assigned\"\n                    // helperText=\"Select Date\"\n                    showTodayButton\n                    variant=\"outlined\"\n                     value={selectedDate} \n                     onChange={this.handleDateChange} \n                    />\n      </MuiPickersUtilsProvider>\n    );\n  }\n}","import React from 'react';\nimport MaskedInput from 'react-text-mask';\nimport NumberFormat from 'react-number-format';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\n\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n  },\n});\n\nfunction TextMaskCustom(props) {\n  const { inputRef, ...other } = props;\n\n  return (\n    <MaskedInput\n      {...other}\n      ref={ref => {\n        inputRef(ref ? ref.inputElement : null);\n      }}\n      mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n      placeholderChar={'\\u2000'}\n      showMask\n    />\n  );\n}\n\nTextMaskCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n};\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      prefix=\"$\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nclass FormattedInputs extends React.Component {\n  state = {\n    textmask: '(   )    -    ',\n    numberformat: '(1  )    -    ',\n  };\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { textmask, numberformat } = this.state;\n\n    return (\n      <div className={classes.container}>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"formatted-text-mask-input\">Phone Number</InputLabel>\n          <Input\n            label=\"Phone Number\"\n            value={textmask}\n            onChange={this.handleChange('textmask')}\n            id=\"formatted-text-mask-input\"\n            inputComponent={TextMaskCustom}\n            variant=\"outlined\"\n          />\n        </FormControl>\n\n      </div>\n    );\n  }\n}\n\nFormattedInputs.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(FormattedInputs);\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { green } from \"@material-ui/core/colors\";\n\nimport { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\n\nconst styles = {\n  input: {\n    minWidth: \"100%\"\n  }\n};\n\nclass Employee extends React.Component {\n  state = {\n    age: \"\",\n    open: false\n  };\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleOpen = () => {\n    this.setState({ open: true });\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <FormControl className={classes.input}>\n        <InputLabel htmlFor=\"demo-controlled-open-select\">Employee Assisting</InputLabel>\n        <Select\n          open={this.state.open}\n          onClose={this.handleClose}\n          onOpen={this.handleOpen}\n          value={this.state.age}\n          onChange={this.handleChange}\n          inputProps={{\n            name: \"age\",\n            id: \"demo-controlled-open-select\"\n          }}\n        >\n          <MenuItem value=\"\">\n            <em>Select Employee</em>\n          </MenuItem>\n          <MenuItem value={1}>Employee 1</MenuItem>\n          <MenuItem value={2}>Employee 2</MenuItem>\n          <MenuItem value={3}>Employee 3</MenuItem>\n          <MenuItem value={4}>Employee 4</MenuItem>\n          <MenuItem value={5}>Employee 5</MenuItem>\n          <MenuItem value={6}>Add</MenuItem>\n\n        </Select>\n      </FormControl>\n    );\n  }\n}\n\nexport default withStyles(styles)(Employee);\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { green, white } from \"@material-ui/core/colors\";\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  TextField,\n  Grid,\n  Fab\n} from \"@material-ui/core\";\nimport Type from \"./form/Type\";\nimport DateTime from \"./form/Date&TimePicker\";\nimport Date from \"./form/DatePicker\";\nimport PhoneNumber from \"./form/PhoneNumber\";\nimport EmployeeAssisting from \"./form/Employee\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport API from \"../../utils/API\";\n\nconst styles = {\n  card: {\n    minWidth: 300,\n    minHeight: 200\n    // justifyContent: \"center\",\n  },\n  cardHeader: {\n    background: `#dfafea`,\n    color: white\n  },\n  cardContent: {\n    width: \"100%\"\n  },\n  input: {\n    minWidth: \"100%\"\n  },\n  hCenter: {\n    display: \"flex\"\n    // alignItems: \"center\"\n    // justifyContent: \"center\"\n  },\n  fab: {\n    display: \"flex\"\n    // justifyContent:\n  }\n};\n\nclass NewAppointmentCard extends React.Component {\n  state = {\n    // dateInput: \"\",\n    // apptDate: \"\",\n    assigneeFirstName: \"\",\n    assigneeLastName: \"\",\n    // assigneePhone: \"\",\n    adjusterFirstName: \"\",\n    adjusterLastName: \"\",\n    // adjusterPhone: \"\",\n    // assignementType: \"\",\n    // multiline: \"\",\n    refName: \"\",\n    refNumber: \"\",\n    locationName: \"\",\n    address: \"\",\n    city: \"\",\n    state: \"\",\n    postalCode: \"\",\n    // employeeAssign: \"\"\n  };\n\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.checked });\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    API.saveAppt({\n      // dateInput: this.state.dateInput,\n      // apptDate: this.state.apptDate,\n      assigneeFirstName: this.state.assigneeFirstName,\n      assigneeLastName: this.state.assigneeLastName,\n      // assigneePhone: this.state.assigneePhone,\n      adjusterFirstName: this.state.adjusterFirstName,\n      adjusterLastName: this.state.adjusterLastName,\n      // adjusterPhone: this.state.adjusterPhone,\n      // assignementType: this.state.assignementType,\n      // notes: this.state.multiline,\n      refName: this.state.refName,\n      refNumber: this.state.refNumber,\n      locationName: this.state.locationName,\n      address: this.state.address,\n      city: this.state.city,\n      state: this.state.state,\n      postalCode: this.state.postalCode,\n      // employeeAssign: this.state.employeeAssign\n    });\n    console.log(this.state)\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        <ExpansionPanel>\n          <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n            <AppBar position=\"static\">\n              <Toolbar>\n                <Typography\n                  variant=\"h6\"\n                  color=\"inherit\"\n                  className={classes.grow}\n                >\n                  New Appointment\n                </Typography>\n              </Toolbar>\n            </AppBar>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails>\n            <Grid container item xs={12}>\n              <form\n                className={classes.input}\n                autoComplete=\"off\"\n                onSubmit={this.handleFormSubmit}\n              >\n                <Grid container spacing={16}>\n                  {/* Date the appointment was called in to be assigned */}\n                  {/* <Grid item xs={12}>\n                    <Date fullWidth />\n                  </Grid> */}\n                  {/* Date the assignment will be taking place on */}\n\n                  {/* <Grid item xs={12}>\n                    <DateTime />\n                  </Grid> */}\n\n                  {/* Who will is assigning the assignment */}\n                  {/* Assignee Last Name for searchability purposes */}\n                  <Grid item xs={12} md={6} lg={6}>\n                    <TextField\n                      fullWidth\n                      id=\"assigneeFirstName\"\n                      label=\"Assignee&#39;s First Name\"\n                      className={classes.textField}\n                      name=\"assigneeFirstName\"\n                      value={this.state.assigneeFirstName}\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      onChange={this.handleInputChange}\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} md={6} lg={6}>\n                    <TextField\n                      id=\"assigneeLastName\"\n                      fullWidth\n                      label=\"Assignee&#39;s Last Name\"\n                      name=\"assigneeLastName\"\n                      className={classes.textField}\n                      value={this.state.assigneeLastName}\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      onChange={this.handleInputChange}\n                    />\n                  </Grid>\n\n                  {/* <Grid item xs={12}>\n                    <PhoneNumber phone={this.state.assigneePhone} />\n                  </Grid> */}\n                  {/* Assignee's phone number to contact in case their our questions[???] */}\n                  <br />\n\n                  {/* Contact information for person paying for the assignment {typically an adjuster} */}\n\n                  {/* Reference Name for the file || Name need in order to bill out the assignment */}\n                  {/* Reference Number to be able to easily search for the assignemnt if one is not assign give default */}\n\n                  <Grid item xs={12} md={6} lg={6}>\n                    <TextField\n                      fullWidth\n                      id=\"adjusterFirstName\"\n                      label=\"Adjuster&#39;s First Name\"\n                      className={classes.textField}\n                      name=\"adjusterFirstName\"\n                      value={this.state.adjusterFirstName}\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      onChange={this.handleInputChange}\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} md={6} lg={6}>\n                    <TextField\n                      fullWidth\n                      id=\"adjusterLastName\"\n                      label=\"Adjuster&#39;s Last Name\"\n                      className={classes.textField}\n                      name=\"adjusterLastName\"\n                      value={this.state.adjusterLastName}\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      onChange={this.handleInputChange}\n                    />\n                  </Grid>\n\n                  {/* <Grid item xs={12}>\n                    <PhoneNumber />\n                  </Grid> */}\n\n                  <br />\n\n                  {/* Drop down selector with types off appointments to choose from */}\n                  {/* <Grid item xs={12}>\n                    <Type />\n                  </Grid> */}\n                  <br />\n\n                  {/* Notes section in case the client has special requests that need to be followed */}\n\n                  {/* <Grid item xs={8}>\n                    <TextField\n                      id=\"outlined-multiline-flexible\"\n                      label=\"Notes\"\n                      multiline\n                      fullWidth\n                      rowsMax=\"2\"\n                      name=\"multiline\"\n                      value={this.state.multiline}\n                      onChange={this.handleChange(\"multiline\")}\n                      className={classes.textField}\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      onChange={this.handleInputChange}\n                    />\n                  </Grid> */}\n\n                  <Grid item xs={6}>\n                    <TextField\n                      fullWidth\n                      id=\"Refname\"\n                      label=\"Reference Name\"\n                      className={classes.textField}\n                      name=\"refName\"\n                      value={this.state.refName}\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      onChange={this.handleInputChange}\n                    />\n                  </Grid>\n\n                  <Grid item xs={6}>\n                    <TextField\n                      fullWidth\n                      id=\"Refname\"\n                      label=\"Reference Number\"\n                      className={classes.textField}\n                      name=\"refNumber\"\n                      value={this.state.refNumber}\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      onChange={this.handleInputChange}\n                    />\n                  </Grid>\n\n                  {/* Assignment location information */}\n\n                  {/* Assignment location information */}\n                  <Grid item xs={12}>\n                    <TextField\n                      id=\"outlined-helperText\"\n                      label=\"Location Name\"\n                      fullWidth\n                      className={classes.textField}\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      onChange={this.handleInputChange}\n                      name=\"locationName\"\n                      value={this.state.locationName}\n                    />\n                  </Grid>\n                  <Grid item xs={6}>\n                    <TextField\n                      fullWidth\n                      id=\"outlined-helperText\"\n                      label=\"Street Address\"\n                      className={classes.textField}\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      onChange={this.handleInputChange}\n                      name=\"address\"\n                      value={this.state.adress}\n\n                    />\n                  </Grid>\n\n                  <Grid item xs={6}>\n                    <TextField\n                      fullWidth\n                      id=\"outlined-helperText\"\n                      label=\"City\"\n                      className={classes.textField}\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      onChange={this.handleInputChange}\n                      name=\"city\"\n                      value={this.state.city}\n                    />\n                  </Grid>\n\n                  <Grid item xs={6}>\n                    <TextField\n                      fullWidth\n                      id=\"outlined-helperText\"\n                      label=\"State/Province\"\n                      className={classes.textField}\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      onChange={this.handleInputChange}\n                      name=\"state\"\n                      value={this.state.state}\n                    />\n                  </Grid>\n\n                  <Grid item xs={6}>\n                    <TextField\n                      fullWidth\n                      id=\"outlined-helperText\"\n                      label=\"Postal / Zip Code\"\n                      className={classes.textField}\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      onChange={this.handleInputChange}\n                      name=\"postalCode\"\n                      value={this.state.postalCode}\n                    />\n                  </Grid>\n\n                  {/* Which contractor will be covering the assignment */}\n                  {/* Date the contractor accepted the job || to avoid future problems */}\n\n                  {/* Name of the employee who assisted in taking the assignment */}\n                  <Grid item xs={12}>\n                    {/* <EmployeeAssisting /> */}\n                  </Grid>\n\n                  {/* Add Button to save the assignment to the database */}\n                  <Grid item xs={6}>\n                    <Fab\n                      color=\"danger\"\n                      aria-label=\"Add\"\n                      className={classes.fab}\n                      type=\"submit\"\n                    >\n                      <AddIcon />\n                    </Fab>\n                  </Grid>\n                </Grid>\n              </form>\n            </Grid>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(NewAppointmentCard);\n","import React from 'react';\nimport MaskedInput from 'react-text-mask';\nimport NumberFormat from 'react-number-format';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n  },\n});\n\nfunction TextMaskCustom(props) {\n  const { inputRef, ...other } = props;\n\n  return (\n    <MaskedInput\n      {...other}\n      ref={ref => {\n        inputRef(ref ? ref.inputElement : null);\n      }}\n      mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n      placeholderChar={'\\u2000'}\n      showMask\n    />\n  );\n}\n\nTextMaskCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n};\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      prefix=\"$\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nclass FormattedInputs extends React.Component {\n  state = {\n    textmask: '(   )    -    ',\n    numberformat: '(1  )    -    ',\n  };\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { textmask, numberformat } = this.state;\n\n    return (\n      <div className={classes.container}>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"formatted-text-mask-input\">Phone Number</InputLabel>\n          <Input\n            label=\"Phone Number\"\n            value={textmask}\n            onChange={this.handleChange('textmask')}\n            id=\"formatted-text-mask-input\"\n            inputComponent={TextMaskCustom}\n          />\n        </FormControl>\n\n      </div>\n    );\n  }\n}\n\nFormattedInputs.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(FormattedInputs);\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { TextField, Grid } from \"@material-ui/core\";\nimport PhoneNumber from \"./PhoneNumber\";\n\nconst styles = {\n  input: {\n    minWidth: \"100%\"\n  },\n  hCenter: {\n    display: \"flex\"\n    // alignItems: \"center\"\n    // justifyContent: \"center\"\n  },\n  fab: {\n    display: \"flex\"\n    // justifyContent:\n  }\n};\n\nclass ClientName extends React.Component {\n  // handleChange = name => event => {\n  //   this.setState({ [name]: event.target.checked });\n  // };\n\n  // handleClose = () => {\n  //   this.setState({ open: false });\n  // };\n\n  // handleOpen = () => {\n  //   this.setState({ open: true });\n  // };\n\n  render() {\n    const { classes, client, change, name } = this.props;\n    return (\n      <div>\n          <TextField\n            id=\"ClientFirstName\"\n            type=\"text\"\n            label=\"Client's First Name\"\n            className={classes.textField}\n            name=\"firstName\"\n            value={client.firstName}\n            onChange={change}\n            margin=\"normal\"\n            variant=\"outlined\"\n            // fullWidth\n          />\n          <TextField\n            id=\"ClientLastName\"\n            type=\"text\"\n            label=\"Client's Last Name\"\n            className={classes.textField}\n            name=\"lastName\"\n            value={client.lastName}\n            onChange={change}\n            margin=\"normal\"\n            variant=\"outlined\"\n            // fullWidth\n          />\n          <TextField\n            id=\"clientPhone\"\n            type=\"text\"\n            label=\"Client's Phone Number\"\n            className={classes.textField}\n            name=\"phone\"\n            value={client.phone}\n            onChange={change}\n            margin=\"normal\"\n            variant=\"outlined\"\n            // fullWidth \n          />\n\n        {/* <PhoneNumber /> */}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(ClientName);\n","import React, { Component } from \"react\";\nimport Navbar from \"../Navbar\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport classNames from \"classnames\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport ClientName from \"./form/ClientName\";\nimport PhoneNumber from \"./form/PhoneNumber\";\nimport API from \"../../utils/API\";\n\nconst styles = theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  grow: {\n    flexGrow: 1\n  },\n  root: {\n    flexGrow: 1\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit\n  },\n  dense: {\n    marginTop: 16\n  },\n  menu: {\n    width: 200\n  },\n  card: {\n    minWidth: 275\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\"\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  }\n});\n\nconst countries = [\n  {\n    value: \"USA\"\n  },\n  {\n    value: \"UK\"\n  },\n  {\n    value: \"JAP\"\n  }\n];\n\nconst clientType = [\n  {\n    value: \"Investigation\"\n  },\n  {\n    value: \"Workers Compensation\"\n  },\n  {\n    value: \"Insurance\"\n  },\n  {\n    value: \"Custom\"\n  }\n];\n\nclass ClientCard extends React.Component {\n  state = {\n    clientName: \"\",\n    // phone: \"\",\n    // email: \"\",\n    position: \"\",\n    notes:\"\",\n    contactPerson: {\n      firstName: \"\",\n      lastName: \"\",\n      phone: \"\",\n      email: \"\"\n      // position: \"\"\n    },\n    clientType: \"\",\n    billing: {\n      contactBilling: {\n        name: \"\",\n        phone: \"\",\n        email: \"\"\n        // position: \"\"\n      },\n      location: {\n        // locationName: \"\",\n        address: \"\",\n        city: \"\",\n        state: \"\",\n        zipCode: \"\"\n      }\n    }\n  };\n\n  handleChange = name => event => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value\n    });\n\n    // setTimeout(() => {\n      // console.log(this.state);\n    // }, 500);\n  };\n\n  handleContactChange = event => {\n    const field = event.target.name;\n\n    const contactPerson = this.state.contactPerson;\n\n    contactPerson[field] = event.target.value;\n\n    this.setState({\n      contactPerson\n    });\n    // console.log(this.state);\n  };\n\n  handleBillingChange = event => {\n    const field = event.target.name;\n    const billing = this.state.billing;\n    const { contactBilling, location } = billing;\n\n    contactBilling[field] = event.target.value;\n    location[field] = event.target.value;\n\n    this.setState({ billing: { contactBilling, location } });\n    // console.log(this.state);\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    // const { contactPerson } = this.state;\n    // const { contactBilling, location } = this.state.billing.;\n    console.log(this.state);\n    API.saveClient({\n      clientName: this.state.clientName,\n      // phone: this.state.phone,\n      // email: this.state.email,\n      position: this.state.position,\n      notes: this.state.notes,\n      contactPerson: {\n        firstName: this.state.contactPerson.firstName,\n        lastName: this.state.contactPerson.lastName,\n        phone: this.state.contactPerson.phone,\n        email: this.state.contactPerson.email\n        // position: contactPerson.position\n      },\n      clientType: this.state.clientType,\n      billing: {\n        contactBilling: {\n          name: this.state.billing.contactBilling.name,\n          phone: this.state.billing.contactBilling.phone,\n          email: this.state.billing.contactBilling.email\n          // position: contactBilling.position\n        },\n        location: {\n          address: this.state.billing.location.address,\n          city: this.state.billing.location.city,\n          state: this.state.billing.location.state,\n          zipCode: this.state.billing.location.zipCode\n        }\n      }\n    }).then(res => {\n      console.log(res.data);\n      this.setState({\n        clientName: \"\",\n        // phone: \"\",\n        // email: \"\",\n        position: \"\",\n        notes:\"\",\n        contactPerson: {\n          firstName: \"\",\n          lastName: \"\",\n          phone: \"\",\n          email: \"\"\n          // position: \"\"\n        },\n        clientType: \"\",\n        billing: {\n          contactBilling: {\n            name: \" \",\n            phone: \"\",\n            email: \"\"\n            // position: \"\"\n          },\n          location: {\n            // locationName: \"\",\n            address: \"\",\n            city: \" \",\n            state: \"\",\n            zipCode: \"\"\n          }\n        }\n      });\n    });\n\n    console.log(this.state);\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { contactPerson } = this.state;\n    const { contactBilling, location } = this.state.billing;\n\n    return (\n      <div className={classes.root}>\n        <Grid container item xs={12}>\n          <Card className={classes.card}>\n            <CardContent>\n              <AppBar position=\"static\" className={classes.cardHeader}>\n                <Toolbar>\n                  <Typography\n                    variant=\"h6\"\n                    color=\"inherit\"\n                    className={classes.grow}\n                  >\n                    Client Contact Card\n                  </Typography>\n                  {/* <Button color=\"inherit\">Edit</Button> */}\n                </Toolbar>\n              </AppBar>\n              <form\n                className={classes.container}\n                noValidate\n                autoComplete=\"off\"\n                onSubmit={this.handleFormSubmit}\n              >\n                <Grid\n                  container\n                  spacing={24}\n                  direction=\"row\"\n                  justify=\"center\"\n                  alignItems=\"flex-start\"\n                >\n                  <Grid item xs={4}>\n                    <Grid\n                      container\n                      direction=\"row\"\n                      justify=\"flex-end\"\n                      alignItems=\"flex-start\"\n                    >\n                      <Grid item xs={6}>\n                        <TextField\n                          id=\"outlined-name\"\n                          label=\"First Name\"\n                          className={classes.textField}\n                          name=\"firstName\"\n                          value={contactPerson.firstName}\n                          onChange={this.handleContactChange}\n                          margin=\"normal\"\n                          variant=\"outlined\"\n                          fullWidth\n                        />\n                      </Grid>\n\n                      <Grid item xs={6}>\n                        <TextField\n                          id=\"outlined-name\"\n                          label=\"Last Name\"\n                          className={classes.textField}\n                          name=\"lastName\"\n                          value={contactPerson.lastName}\n                          onChange={this.handleContactChange}\n                          margin=\"normal\"\n                          variant=\"outlined\"\n                          fullWidth\n                        />\n                      </Grid>\n                    </Grid>\n                    <TextField\n                      id=\"outlined-number\"\n                      label=\"Phone Number\"\n                      name=\"phone\"\n                      value={contactPerson.phone}\n                      onChange={this.handleContactChange}\n                      type=\"Phone Number\"\n                      className={classes.textField}\n                      InputLabelProps={{\n                        shrink: true\n                      }}\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                    />\n                    <TextField\n                      id=\"outlined-email-input\"\n                      label=\"Email\"\n                      className={classes.textField}\n                      fullWidth\n                      type=\"email\"\n                      name=\"email\"\n                      value={contactPerson.email}\n                      onChange={this.handleContactChange}\n                      autoComplete=\"email\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                    />\n                    <TextField\n                      select\n                      id=\"outlined-with-placeholder\"\n                      label=\"Type of Client\"\n                      className={classes.textField}\n                      fullWidth\n                      value={this.state.clientType}\n                      name=\"clientType\"\n                      onChange={this.handleChange(\"clientType\")}\n                      SelectProps={{\n                        MenuProps: {\n                          className: classes.menu\n                        }\n                      }}\n                      helperText=\"Choose one\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                    >\n                      {clientType.map(option => (\n                        <MenuItem key={option.value} value={option.value}>\n                          {option.value}\n                        </MenuItem>\n                      ))}\n                    </TextField>\n                  </Grid>\n                  <Grid item xs={4}>\n                    <TextField\n                      id=\"clientName\"\n                      label=\"Company / Client Name\"\n                      placeholder=\"Company / Client Name\"\n                      name=\"clientName\"\n                      value={this.state.clientName}\n                      onChange={this.handleChange()}\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      InputLabelProps={{\n                        shrink: true\n                      }}\n                    />\n                    <TextField\n                      id=\"outlined-full-width\"\n                      label=\"Position\"\n                      placeholder=\"Position\"\n                      fullWidth\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      name=\"position\"\n                      value={this.state.position}\n                      onChange={this.handleChange()}\n                      InputLabelProps={{\n                        shrink: true\n                      }}\n                    />\n                    <TextField\n                      id=\"outlined-multiline-static\"\n                      label=\"Notes\"\n                      name=\"notes\"\n                      value={this.state.notes}\n                      onChange={this.handleChange()}\n                      multiline\n                      fullWidth\n                      rows=\"10\"\n                      defaultValue=\"Default Value\"\n                      className={classes.textField}\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                    />\n                  </Grid>\n                  <Grid item xs={3}>\n                    <TextField\n                      id=\"outlined-read-only-input\"\n                      defaultValue=\"Billing Information\"\n                      className={classes.textField}\n                      fullWidth\n                      margin=\"normal\"\n                      InputProps={{\n                        readOnly: true\n                      }}\n                      variant=\"outlined\"\n                    />\n                    <TextField\n                      id=\"outlined-helperText\"\n                      label=\"Contact Name\"\n                      name=\"name\"\n                      value={contactBilling.name}\n                      onChange={this.handleBillingChange}\n                      fullWidth\n                      className={classes.textField}\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                    />\n\n                    <TextField\n                      id=\"outlined-number\"\n                      label=\"Billing Phone Number\"\n                      name=\"phone\"\n                      value={contactBilling.phone}\n                      onChange={this.handleBillingChange}\n                      type=\"Phone Number\"\n                      className={classes.textField}\n                      InputLabelProps={{\n                        shrink: true\n                      }}\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                    />\n\n                    <TextField\n                      id=\"outlined-email-input\"\n                      label=\"Billing Email\"\n                      className={classes.textField}\n                      fullWidth\n                      type=\"email\"\n                      name=\"email\"\n                      value={contactBilling.email}\n                      onChange={this.handleBillingChange}\n                      autoComplete=\"email\"\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                    />\n\n                    <TextField\n                      id=\"outlined-helperText\"\n                      label=\"Street Address\"\n                      defaultValue=\"Street Address\"\n                      fullWidth\n                      className={classes.textField}\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      name=\"address\"\n                      value={location.address}\n                      onChange={this.handleBillingChange}\n                    />\n                    <Grid\n                      container\n                      direction=\"row\"\n                      justify=\"flex-end\"\n                      alignItems=\"flex-start\"\n                    >\n                      <TextField\n                        id=\"outlined-helperText\"\n                        label=\"City\"\n                        defaultValue=\"City\"\n                        className={classes.textField}\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        name=\"city\"\n                        value={location.city}\n                        onChange={this.handleBillingChange}\n                      />\n                      <Grid item xs>\n                        <TextField\n                          id=\"outlined-helperText\"\n                          label=\"State/Province\"\n                          defaultValue=\"State\"\n                          className={classes.textField}\n                          margin=\"normal\"\n                          variant=\"outlined\"\n                          fullWidth\n                          name=\"state\"\n                          value={location.state}\n                          onChange={this.handleBillingChange}\n                        />\n                      </Grid>\n                    </Grid>\n                    <Grid\n                      container\n                      direction=\"row\"\n                      justify=\"flex-end\"\n                      alignItems=\"flex-start\"\n                    >\n                      <Grid item xs>\n                        <TextField\n                          id=\"outlined-helperText\"\n                          label=\"Postal / Zip Code\"\n                          defaultValue=\"Zip Code\"\n                          className={classes.textField}\n                          margin=\"normal\"\n                          variant=\"outlined\"\n                          name=\"zipCode\"\n                          value={location.zipCode}\n                          onChange={this.handleBillingChange}\n                        />\n                        {/* <TextField\n                                          id=\"outlined-select-currency\"\n                                          select\n                                          label=\"Country\"\n                                          className={classes.textField}\n                                          value={this.state.country}\n                                          onChange={this.handleChange('country')}\n                                          fullWidth\n                                          SelectProps={{\n                                              MenuProps: {\n                                                  className: classes.menu,\n                                              },\n                                          }}\n                                          helperText=\"Please select your country\"\n                                          margin=\"normal\"\n                                          variant=\"outlined\"\n                                      >\n                                          {countries.map(option => (\n                                              <MenuItem key={option.value} value={option.value}>\n                                                  {option.value}\n                                              </MenuItem>\n                                          ))}\n                                      </TextField> */}\n                      </Grid>\n                      <Grid item xs>\n                        <Button\n                          type=\"primary\"\n                          variant=\"contained\"\n                          color=\"inherit\"\n                          type=\"submit\"\n                        >\n                          Submit\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </form>\n            </CardContent>\n          </Card>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nClientCard.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(ClientCard);\n","import React, {\n    Component\n  } from 'react';\n  import Appointmentform from \"../components/AppointmentForm\"\n  import ContractorCard from \"../components/contractor\"\n  import ApptCard from \"../components/ApptCard\"\n  import Navbar from \"../components/Navbar\"\n  import NewAppoointmentForm from \"../components/NewAppointmentForm/NewAppointment\"\n  // import './App.css';\n  import DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider } from 'material-ui-pickers';\nimport ClientForm from \"../components/ClientForm/index\"\n  class Cards extends Component {\n    render() {\n      return ( \n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <div className = \"App\" >\n        <Navbar/>\n        <Appointmentform />\n        \n        <ContractorCard />\n  \n        <NewAppoointmentForm />\n  \n        <ClientForm />\n  \n        </div>\n\n        </MuiPickersUtilsProvider>\n      );\n    }\n  }\n  \n  export default Cards;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Avatar from '@material-ui/core/Avatar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { TextField, Grid, Button } from '@material-ui/core';\nconst styles = (theme) => ({\n\tmain: {\n\t\twidth: '80%',\n\t\tdisplay: 'block', // Fix IE 11 issue.\n\t\tmarginLeft: theme.spacing.unit * 3,\n\t\tmarginRight: theme.spacing.unit * 3,\n\t\t[theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n\t\t\twidth: 400,\n\t\t\tmarginLeft: 'auto',\n\t\t\tmarginRight: 'auto'\n\t\t}\n\t},\n\tpaper: {\n\t\tmarginTop: theme.spacing.unit * 8,\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\talignItems: 'center',\n\t\tpadding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`\n\t},\n\tavatar: {\n\t\tmargin: theme.spacing.unit,\n\t\tbackgroundColor: theme.palette.secondary.main\n\t},\n\tform: {\n\t\twidth: '100%', // Fix IE 11 issue.\n\t\tmarginTop: theme.spacing.unit\n\t},\n\tsubmit: {\n\t\tmarginTop: theme.spacing.unit * 3\n\t}\n});\n\nfunction SignIn(props) {\n\tconst { classes, onSubmit, onChange, user } = props;\n\n\treturn (\n\t\t<main className={classes.main}>\n\t\t\t<CssBaseline />\n\t\t\t<Paper className={classes.paper}>\n\t\t\t\t<Avatar className={classes.avatar}>\n\t\t\t\t\t<LockOutlinedIcon />\n\t\t\t\t</Avatar>\n\t\t\t\t<Typography component='h1' variant='h5'>\n\t\t\t\t\tSign in\n\t\t\t\t</Typography>\n\t\t\t\t<form onSubmit={onSubmit} className={classes.form}>\n\t\t\t\t\t<Grid item sm={12}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tlabel='username'\n\t\t\t\t\t\t\tname='username'\n\t\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\t\tvalue={user.username}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item sm={12}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tlabel='password'\n\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\t\tvalue={user.password}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Button type='submit' fullWidth variant='contained' color='primary' className={classes.submit}>\n\t\t\t\t\t\tSign in\n\t\t\t\t\t</Button>\n\t\t\t\t</form>\n\t\t\t</Paper>\n\t\t</main>\n\t);\n}\n\nSignIn.propTypes = {\n\tclasses: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(SignIn);\n","// export default Nav;\n\nimport React from 'react';\n// import PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport './nav.css'\n// need these to import color scheme\n// import white from '@material-ui/core/colors';\n// import { createMuiTheme, withTheme } from '@material-ui/core/styles';\n// import { withStyles } from '@material-ui/core/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#B0C4DE', //light blue\n      main: '#4caf50', //green \n      dark: '#336699', //dark blue\n    },\n    secondary: {\n      light: '#dfafea', //light-purple\n      main: '#9A0307', //bright-red\n      dark: '#8D858C', //Grey\n      contrastText: '#110d03', //black\n    },\n  },\n});\n\nfunction Nav () {\n  return (\n    <div>\n      <AppBar className =\"AppBar\" color = {theme.palette.primary.main}>\n        <Toolbar>\n          <Typography variant=\"h6\" color = 'default'>\n            Schedulize\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default Nav;\n","import React from 'react';\nimport SignIn from '../components/LogInModal';\nimport PropTypes from 'prop-types';\nimport API from '../utils/API';\nimport Navbar from '../components/Nav/index';\nclass LoginPage extends React.Component {\n\t/**\n   * Class constructor.\n   */\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\t// set the initial component state\n\t\tthis.state = {\n\t\t\tuser: {\n\t\t\t\tusername: '',\n\n\t\t\t\tpassword: ''\n\t\t\t}\n\t\t};\n\n\t\tthis.processLogin = this.processForm.bind(this);\n\n\t\tthis.changeUser = this.changeUser.bind(this);\n\t}\n\n\t/**\n   * Change the user object.\n   *\n   * @param {object} event - the JavaScript event object\n   */\n\tchangeUser(event) {\n\t\tconst field = event.target.name;\n\n\t\tconst user = this.state.user;\n\n\t\tuser[field] = event.target.value;\n\n\t\tthis.setState({\n\t\t\tuser\n\t\t});\n\t\t// console.log(this.state);\n\t}\n\n\tprocessForm(event) {\n\t\t// prevent default action. in this case, action is the form submission event\n\t\tevent.preventDefault();\n\n\t\tconsole.log(this.state.user);\n\n\t\t// Login routes from Utility\n\t\tAPI.LoginUser({\n\t\t\tusername: this.state.user.username,\n\t\t\tpassword: this.state.user.password\n\t\t}).then((res) => {\n\t\t\t//  if(res.status === \"ok\")\n\n\t\t\twindow.location = res.data.redirect;\n\t\t});\n\t}\n\n\t/**\n   * Render the component.\n   */\n\trender() {\n\t\treturn (\n\t\t\t<main>\n\t\t\t\t<Navbar />\n\t\t\t\t<br />\n\t\t\t\t<br />\n\t\t\t\t<SignIn onSubmit={this.processLogin} onChange={this.changeUser} user={this.state.user} />\n\t\t\t</main>\n\t\t);\n\t}\n}\n\nLoginPage.contextTypes = {\n\trouter: PropTypes.object.isRequired\n};\n\nexport default LoginPage;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Card, CardHeader, TextField, Grid, Fab, CardContent, Button } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\n\r\nconst styles = (theme) => ({\r\n\tmain: {\r\n\t\twidth: '80%',\r\n\t\tdisplay: 'block', // Fix IE 11 issue.\r\n\t\tmarginLeft: theme.spacing.unit * 3,\r\n\t\tmarginRight: theme.spacing.unit * 3,\r\n\t\t[theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\r\n\t\t\twidth: 400,\r\n\t\t\tmarginLeft: 'auto',\r\n\t\t\tmarginRight: 'auto'\r\n\t\t}\r\n\t},\r\n\tpaper: {\r\n\t\tmarginTop: theme.spacing.unit * 8,\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\talignItems: 'center',\r\n\t\tpadding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`\r\n\t},\r\n\tavatar: {\r\n\t\tmargin: theme.spacing.unit,\r\n\t\tbackgroundColor: theme.palette.secondary.main\r\n\t},\r\n\tform: {\r\n\t\twidth: '100%', // Fix IE 11 issue.\r\n\t\tmarginTop: theme.spacing.unit\r\n\t},\r\n\tsubmit: {\r\n\t\tmarginTop: theme.spacing.unit * 3\r\n\t}\r\n});\r\n\r\nfunction SignUpForm(props) {\r\n\tconst { classes, onSubmit, onChange, user } = props;\r\n\r\n\treturn (\r\n\t\t<main className={classes.main}>\r\n\t\t\t<CssBaseline />\r\n\t\t\t<Paper className={classes.paper}>\r\n\t\t\t\t<Avatar className={classes.avatar}>\r\n\t\t\t\t\t<LockOutlinedIcon />\r\n\t\t\t\t</Avatar>\r\n\t\t\t\t<Typography component='h1' variant='h5'>\r\n\t\t\t\t\tAdd User\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<form onSubmit={onSubmit}>\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t{/* This is for the name of the User */}\r\n\t\t\t\t\t\t<Grid item sm={12}>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\t\t\tvalue={user.name}\r\n\t\t\t\t\t\t\t\tlabel='name'\r\n\t\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\t\tmargin='normal'\r\n\t\t\t\t\t\t\t\tvariant='outlined'\r\n\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item sm={12}>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tlabel='username'\r\n\t\t\t\t\t\t\t\tname='username'\r\n\t\t\t\t\t\t\t\tmargin='normal'\r\n\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\tvariant='outlined'\r\n\t\t\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\t\t\tvalue={user.username}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item sm={12}>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tlabel='password'\r\n\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\tmargin='normal'\r\n\t\t\t\t\t\t\t\tvariant='outlined'\r\n\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\t\t\tvalue={user.password}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t{/* {submitted && !user.password && <div classname='help-block'>password is required</div>} */}\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item sm={12} md={12} lg={12}>\r\n\t\t\t\t\t\t\t<Button type='submit' variant='contained' color='primary'>\r\n\t\t\t\t\t\t\t\t<AddIcon />\r\n\t\t\t\t\t\t\t\t{'Register'}\r\n\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t<Button variant='contained' color='secondary'>\r\n\t\t\t\t\t\t\t\t<Link to='/'>{'Cancel '}</Link>\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</form>\r\n\t\t\t</Paper>\r\n\t\t</main>\r\n\t);\r\n}\r\n\r\nSignUpForm.propTypes = {\r\n\tonSubmit: PropTypes.func.isRequired,\r\n\tonChange: PropTypes.func.isRequired,\r\n\terrors: PropTypes.object.isRequired,\r\n\tuser: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(SignUpForm);\r\n","// import Nav from '../components/Nav';\r\nimport RegisterForm from '../components/RegisterMdal/index';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport API from '../utils/API';\r\n\r\nclass SignUpPage extends React.Component {\r\n\t/**\r\n   * Class constructor.\r\n   */\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\t// set the initial component state\r\n\t\tthis.state = {\r\n\t\t\tuser: {\r\n\t\t\t\tname: '',\r\n\r\n\t\t\t\tusername: '',\r\n\r\n\t\t\t\tpassword: ''\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.processForm = this.processForm.bind(this);\r\n\r\n\t\tthis.changeUser = this.changeUser.bind(this);\r\n\t}\r\n\r\n\t/**\r\n   * Change the user object.\r\n   *\r\n   * @param {object} event - the JavaScript event object\r\n   */\r\n\tchangeUser(event) {\r\n\t\tconst field = event.target.name;\r\n\r\n\t\tconst user = this.state.user;\r\n\r\n\t\tuser[field] = event.target.value;\r\n\r\n\t\tthis.setState({\r\n\t\t\tuser\r\n\t\t});\r\n\t\t// console.log(this.state);\r\n\t}\r\n\r\n\tprocessForm(event) {\r\n\t\t// prevent default action. in this case, action is the form submission event\r\n\t\tevent.preventDefault();\r\n\r\n\t\tconsole.log(this.state.user);\r\n\t\tAPI.SaveUser({\r\n\t\t\tusername: this.state.user.username,\r\n\t\t\tname: this.state.user.name,\r\n\t\t\tpassword: this.state.user.password\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n   * Render the component.\r\n   */\r\n\trender() {\r\n\t\treturn <RegisterForm onSubmit={this.processForm} onChange={this.changeUser} user={this.state.user} />;\r\n\t}\r\n}\r\n\r\nSignUpPage.contextTypes = {\r\n\trouter: PropTypes.object.isRequired\r\n};\r\n\r\nexport default SignUpPage;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Calendar from './pages/Calendar';\nimport MapPage2 from './pages/MapPage2';\nimport MapPage from './pages/MapPage';\nimport Address from './pages/Address';\nimport NoMatch from './pages/NoMatch';\nimport Cards from './pages/Cards';\nimport Login from './pages/Login';\nimport AddUser from './pages/Register';\n\nfunction App() {\n\treturn (\n\t\t<Router>\n\t\t\t<div>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path='/' component={Login} />\n\t\t\t\t\t<Route exact path='/addUser' component={AddUser} />\n\t\t\t\t\t<Route exact path='/calendar' component={Calendar} />\n\t\t\t\t\t<Route exact path='/map' component={MapPage2} />\n\t\t\t\t\t<Route exact path='/forms' component={Cards} />\n\t\t\t\t\t<Route exact path='/addressbook' component={Address} />\n\t\t\t\t\t<Route component={NoMatch} />\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t</Router>\n\t);\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\n"],"sourceRoot":""}