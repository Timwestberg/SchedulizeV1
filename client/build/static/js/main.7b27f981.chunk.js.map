{"version":3,"sources":["components/Navbar/index.js","components/ClientCard/index.js","components/contractor/form/W9CheckBox/index.js","components/ContractCard/index.js","utils/API.js","pages/Address.js","pages/NoMatch.js","components/AppointmentForm/index.js","components/contractor/form/Standing/index.js","components/contractor/index.js","components/Appointments/ApptCard/AddressForm/index.js","components/Appointments/ApptCard/index.js","pages/Cards.js","components/LogInModal/index.js","components/Nav/index.js","pages/Login.js","App.js","index.js"],"names":["Navbar","react_default","a","createElement","className","href","action","type","placeholder","name","clientType","value","ClientCard","state","country","handleChange","event","_this","setState","Object","defineProperty","target","classes","this","props","Card_default","card","CardContent_default","AppBar_default","position","cardHeader","Toolbar_default","Typography_default","variant","color","grow","Button_default","container","noValidate","autoComplete","Grid_default","spacing","direction","justify","alignItems","item","xs","TextField_default","id","label","textField","clientName","margin","fullWidth","clientPhone","InputLabelProps","shrink","clientEmail","select","onChange","SelectProps","MenuProps","menu","helperText","map","option","MenuItem_default","key","company","multiline","rows","defaultValue","InputProps","readOnly","Value","billPhone","billEmail","clientStreetNumber","clientStreetName","clientCity","clientState","clientZipCode","React","Component","withStyles","theme","background","white","display","flexWrap","flexGrow","root","marginLeft","unit","marginRight","dense","marginTop","width","minWidth","bullet","transform","title","fontSize","pos","marginBottom","styles","green","&$checked","checked","W9CheckBox","checkedG","index_es","control","countries","contractorStand","ContractCard","ConFirstName","ConLastName","ConPhone","conEmail","conStand","form_W9CheckBox","conCert","conPrice","conLocationName","conStreetNumber","conStreetName","conCity","conState","conZipCode","API","getClients","axios","get","getClient","deleteClient","delete","saveClient","clientData","post","getAppts","getAppt","deleteAppt","saveAppt","apptData","getContractors","getContractor","deleteContractor","saveContractor","Address","clients","contactName","contactPhone","contactEmail","contactPosition","ctName","ctEmail","ctPosition","clientLocationName","clientStreetNunmber","loadClients","then","res","console","log","data","catch","err","removeClient","components_Navbar","components_ContractCard","components_ClientCard","client","NoMatch","RecipeReviewCard","expanded","handleExpandClick","CardHeader_default","subheader","component","CardActions_default","actions","disableActionSpacing","IconButton_default","aria-label","Favorite_default","Share_default","classnames","expand","expandOpen","onClick","aria-expanded","ExpandMore_default","maxWidth","media","height","paddingTop","transition","transitions","create","duration","shortest","avatar","backgroundColor","red","Standing","age","open","handleClose","handleOpen","input","htmlFor","onClose","onOpen","inputProps","minHeight","cardContent","form","TextField","hCenter","fab","ContractorCard","_React$createElement","sm","md","lg","form_Standing","rowsMax","Add_default","AddressForm","Fragment","gutterBottom","required","placehlder","ApptCard","CardActionArea_default","ApptCard_AddressForm","size","Cards","AppointmentForm","contractor","Appointments_ApptCard","main","breakpoints","up","paper","flexDirection","padding","concat","palette","secondary","submit","CssBaseline_default","Paper_default","Avatar_default","LockOutlined_default","FormControl_default","InputLabel_default","Input_default","autoFocus","FormControlLabel_default","Checkbox_default","bar","createMuiTheme","primary","contrastText","Nav","Login","components_Nav","LogInModal","App","BrowserRouter","Switch","Route","exact","path","Calendar","MapPage","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.7b27f981.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Navbar() {\n  return (\n  <div className=\"topnav\">\n  <a href=\"/\">Home</a>\n  <a href=\"/calendar\">Calendar</a>\n  <a href=\"/addressbook\">Address Book</a>\n  <a href=\"/map\">Map</a>\n  <a href=\"/forms\">Forms</a>\n  <a href=\"/\">Logout</a>\n  <div className=\"search-container\">\n    <form action=\"/action_page.php\">\n      <input type=\"text\" placeholder=\"Search..\" name=\"search\"/>\n      <button type=\"submit\">Submit</button>\n    </form>\n  </div>\n</div>\n  );\n}\nexport default Navbar;","import React, { Component } from \"react\";\nimport Navbar from \"../Navbar\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport classNames from 'classnames';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { white } from \"@material-ui/core/colors\";\n\n\nconst styles = theme => ({\n    cardHeader: {\n        background: `#4caf50`,\n        color: white\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    root: {\n        flexGrow: 1,\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n    },\n    dense: {\n        marginTop: 16,\n    },\n    menu: {\n        width: 200,\n    },\n    card: {\n        minWidth: 275,\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n});\n\nconst countries = [\n    {\n        value: 'USA',\n    },\n    {\n        value: 'UK',\n    },\n    {\n        value: 'JAP',\n    },\n];\n\nconst clientType = [\n    {\n        value: 'Investigation',\n    },\n    {\n        value: 'Workers Compensation',\n    },\n    {\n        value: 'Insurance',\n    },\n    {\n        value: 'Custom',\n    },\n];\n\nclass ClientCard extends React.Component {\n\n    state = {\n        clientType: \"\",\n        country: \"\"\n    }\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div>\n                <Card className={classes.card}>\n                    <CardContent>\n                        <AppBar position=\"static\" className={classes.cardHeader}>\n                            <Toolbar>\n                                <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n                                    Client Contact Card\n                                </Typography>\n                                <Button color=\"inherit\">Edit</Button>\n                            </Toolbar>\n                        </AppBar>\n                        <form className={classes.container} noValidate autoComplete=\"off\">\n                            <Grid container\n                                spacing={24}\n                                direction=\"row\"\n                                justify=\"center\"\n                                alignItems=\"flex-start\"\n                            >\n                                <Grid item xs={4}>\n                                    <Grid\n                                        container\n                                        direction=\"row\"\n                                        justify=\"flex-end\"\n                                        alignItems=\"flex-start\"\n                                    >\n                                        <TextField\n                                            id=\"outlined-name\"\n                                            label=\"First Name\"\n                                            className={classes.textField}\n                                            value={this.props.clientName}\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                        // fullWidth\n                                        />\n                                        <Grid item xs>\n                                            <TextField\n                                                id=\"outlined-name\"\n                                                label=\"Last Name\"\n                                                className={classes.textField}\n                                                value={this.props.clientName}\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                fullWidth\n                                            />\n                                        </Grid>\n                                    </Grid>\n                                    <TextField\n                                        id=\"outlined-number\"\n                                        label=\"Phone Number\"\n                                        value={this.props.clientPhone}\n                                        type=\"Phone Number\"\n                                        className={classes.textField}\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                    />\n                                    <TextField\n                                        id=\"outlined-email-input\"\n                                        label=\"Email\"\n                                        className={classes.textField}\n                                        fullWidth\n                                        type=\"email\"\n                                        name=\"email\"\n                                        autoComplete=\"email\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        value={this.props.clientEmail}\n                                    />\n                                    <TextField\n                                        select\n                                        id=\"outlined-with-placeholder\"\n                                        label=\"Type of Client\"\n                                        className={classes.textField}\n                                        fullWidth\n                                        value={this.props.clientType}\n                                        onChange={this.handleChange('clientType')}\n                                        SelectProps={{\n                                            MenuProps: {\n                                                className: classes.menu,\n                                            },\n                                        }}\n                                        helperText=\"Choose one\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                    >\n                                        {clientType.map(option => (\n                                            <MenuItem key={option.value} value={option.value}>\n                                                {option.value}\n                                            </MenuItem>\n                                        ))}\n                                    </TextField>\n                                </Grid>\n                                <Grid item xs={4}>\n                                    <TextField\n                                        id=\"outlined-full-width\"\n                                        label=\"Company / Client Name\"\n                                        placeholder=\"Company / Client Name\"\n                                        value={this.props.company}\n                                        fullWidth\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                    />\n                                    <TextField\n                                        id=\"outlined-full-width\"\n                                        label=\"Position\"\n                                        placeholder=\"Position\"\n                                        fullWidth\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        value={this.props.position}\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                    />\n                                    <TextField\n                                        id=\"outlined-multiline-static\"\n                                        label=\"Notes\"\n                                        multiline\n                                        fullWidth\n                                        rows=\"10\"\n                                        defaultValue=\"Default Value\"\n                                        className={classes.textField}\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                    />\n                                </Grid>\n                                <Grid item xs={3}>\n                                    <TextField\n                                        id=\"outlined-read-only-input\"\n                                        defaultValue=\"Billing Information\"\n                                        className={classes.textField}\n                                        fullWidth\n                                        margin=\"normal\"\n                                        InputProps={{\n                                            readOnly: true,\n                                        }}\n                                        variant=\"outlined\"\n                                    />\n                                    <TextField\n                                        id=\"outlined-helperText\"\n                                        label=\"Contact Name\"\n                                        Value=\"Contact Name\"\n                                        fullWidth\n                                        className={classes.textField}\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                    />\n\n                                    <TextField\n                                        id=\"outlined-number\"\n                                        label=\"Billing Phone Number\"\n                                        value={this.props.billPhone}\n                                        type=\"Phone Number\"\n                                        className={classes.textField}\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                    />\n\n                                    <TextField\n                                        id=\"outlined-email-input\"\n                                        label=\"Billing Email\"\n                                        className={classes.textField}\n                                        fullWidth\n                                        type=\"email\"\n                                        name=\"email\"\n                                        autoComplete=\"email\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        value={this.props.billEmail}\n                                    />\n\n                                    <TextField\n                                        id=\"outlined-helperText\"\n                                        label=\"Street Address\"\n                                        defaultValue=\"Street Address\"\n                                        fullWidth\n                                        className={classes.textField}\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        value={this.props.clientStreetNumber + \" \" + this.props.clientStreetName}\n                                    />\n                                    <Grid\n                                        container\n                                        direction=\"row\"\n                                        justify=\"flex-end\"\n                                        alignItems=\"flex-start\"\n                                    >\n                                        <TextField\n                                            id=\"outlined-helperText\"\n                                            label=\"City\"\n                                            defaultValue=\"City\"\n                                            className={classes.textField}\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            value={this.props.clientCity}\n                                        />\n                                        <Grid item xs>\n                                            <TextField\n                                                id=\"outlined-helperText\"\n                                                label=\"State/Province\"\n                                                defaultValue=\"State\"\n                                                className={classes.textField}\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                fullWidth\n                                                value={this.props.clientState}\n                                            />\n                                        </Grid>\n                                    </Grid>\n                                    <Grid\n                                        container\n                                        direction=\"row\"\n                                        justify=\"flex-end\"\n                                        alignItems=\"flex-start\"\n                                    >\n                                        <TextField\n                                            id=\"outlined-helperText\"\n                                            label=\"Postal / Zip Code\"\n                                            defaultValue=\"Zip Code\"\n                                            className={classes.textField}\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            value={this.props.clientZipCode}\n                                        />\n                                        <Grid item xs>\n                                            {/* <TextField\n                                          id=\"outlined-select-currency\"\n                                          select\n                                          label=\"Country\"\n                                          className={classes.textField}\n                                          value={this.state.country}\n                                          onChange={this.handleChange('country')}\n                                          fullWidth\n                                          SelectProps={{\n                                              MenuProps: {\n                                                  className: classes.menu,\n                                              },\n                                          }}\n                                          helperText=\"Please select your country\"\n                                          margin=\"normal\"\n                                          variant=\"outlined\"\n                                      >\n                                          {countries.map(option => (\n                                              <MenuItem key={option.value} value={option.value}>\n                                                  {option.value}\n                                              </MenuItem>\n                                          ))}\n                                      </TextField> */}\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </form>\n                    </CardContent>\n                </Card>\n            </div>\n        )\n    }\n};\n\n\nClientCard.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ClientCard);","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Checkbox, FormControlLabel, Icon } from \"@material-ui/core\";\nimport { green } from \"@material-ui/core/colors\";\n\nconst styles = {\n  root: {\n    color: green[600],\n    \"&$checked\": {\n      color: green[500]\n    }\n  },\n  checked: {}\n};\n\nclass W9CheckBox extends React.Component {\n  state = {\n    checkedG: false\n  };\n\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.checked });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={this.state.checkedG}\n            onChange={this.handleChange(\"checkedG\")}\n            value=\"checkedG\"\n            classes={{\n              root: classes.root,\n              checked: classes.checked\n            }}\n          />\n        }\n        label=\"W-9\"\n      />\n    );\n  }\n}\n\nexport default withStyles(styles)(W9CheckBox);\n","import React, { Component } from \"react\";\nimport Navbar from \"../Navbar\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport classNames from 'classnames';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { white } from \"@material-ui/core/colors\";\nimport W9CheckBox from \"../contractor/form/W9CheckBox\";\n\nconst styles = theme => ({\n    cardHeader: {\n        background: `#4caf50`,\n        color: white\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    root: {\n        flexGrow: 1,\n    },\n    textField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n    },\n    dense: {\n        marginTop: 16,\n    },\n    menu: {\n        width: 200,\n    },\n    card: {\n        minWidth: 275,\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n});\n\nconst countries = [\n    {\n        value: 'USA',\n    },\n    {\n        value: 'UK',\n    },\n    {\n        value: 'JAP',\n    },\n];\n\nconst contractorStand = [\n    {\n        value: 'Good',\n    },\n    {\n        value: 'Testing',\n    },\n    {\n        value: 'Bad',\n    },\n    {\n        value: 'Issues',\n    },\n];\n\nclass ContractCard extends React.Component {\n\n    state = {\n        contractorStand: \"\",\n        country: \"\"\n    }\n\n    handleChange = name => event => {\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div>\n                <Card className={classes.card}>\n                    <CardContent>\n                        <AppBar position=\"static\" className={classes.cardHeader}>\n                            <Toolbar>\n                                <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n                                    Contractor Contact Card\n                                      </Typography>\n                                <Button color=\"inherit\">Edit</Button>\n                            </Toolbar>\n                        </AppBar>\n                        <form className={classes.container} noValidate autoComplete=\"off\">\n                            <Grid container\n                                spacing={24}\n                                direction=\"row\"\n                                justify=\"center\"\n                                alignItems=\"flex-start\"\n                            >\n                                <Grid item xs={4}>\n                                    <Grid\n                                        container\n                                        direction=\"row\"\n                                        justify=\"flex-end\"\n                                        alignItems=\"flex-start\"\n                                    >\n                                        <TextField\n                                            id=\"outlined-name\"\n                                            label=\"First Name\"\n                                            className={classes.textField}\n                                            value={this.props.ConFirstName}\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                        // fullWidth\n                                        />\n                                        <Grid item xs>\n                                            <TextField\n                                                id=\"outlined-name\"\n                                                label=\"Last Name\"\n                                                className={classes.textField}\n                                                value={this.props.ConLastName}\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                fullWidth\n                                            />\n                                        </Grid>\n                                    </Grid>\n                                    <TextField\n                                        id=\"outlined-number\"\n                                        label=\"Phone Number\"\n                                        value={this.props.ConPhone}\n                                        type=\"Phone Number\"\n                                        className={classes.textField}\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                    />\n                                    <TextField\n                                        id=\"outlined-email-input\"\n                                        label=\"Email\"\n                                        className={classes.textField}\n                                        fullWidth\n                                        type=\"email\"\n                                        name=\"email\"\n                                        autoComplete=\"email\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        value={this.props.conEmail}\n                                    />\n                                    <TextField\n                                        select\n                                        id=\"outlined-with-placeholder\"\n                                        label=\"Contractor Standing\"\n                                        className={classes.textField}\n                                        fullWidth\n                                        value={this.state.conStand}\n                                        onChange={this.handleChange('contractorStand')}\n                                        SelectProps={{\n                                            MenuProps: {\n                                                className: classes.menu,\n                                            },\n                                        }}\n                                        helperText=\"Choose one\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                    >\n                                        {contractorStand.map(option => (\n                                            <MenuItem key={option.value} value={option.value}>\n                                                {option.value}\n                                            </MenuItem>\n                                        ))}\n                                    </TextField>\n                                    <W9CheckBox />\n                                </Grid>\n                                <Grid item xs={4}>\n                                    <TextField\n                                        id=\"outlined-full-width\"\n                                        label=\"Type of Certifcation / Numbers\"\n                                        placeholder=\"Type of Certifcation / Numbers\"\n                                        value={this.state.conCert}\n                                        fullWidth\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                    />\n                                    <TextField\n                                        id=\"outlined-full-width\"\n                                        label=\"Pricing\"\n                                        placeholder=\"Pricing\"\n                                        value={this.props.conPrice}\n                                        fullWidth\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                    />\n                                    <TextField\n                                        id=\"outlined-multiline-static\"\n                                        label=\"Notes\"\n                                        multiline\n                                        fullWidth\n                                        rows=\"10\"\n                                        defaultValue=\"Default Value\"\n                                        className={classes.textField}\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                    />\n                                </Grid>\n                                <Grid item xs={3}>\n                                    <TextField\n                                        id=\"outlined-read-only-input\"\n                                        defaultValue=\"Billing Information\"\n                                        className={classes.textField}\n                                        fullWidth\n                                        margin=\"normal\"\n                                        InputProps={{\n                                            readOnly: true,\n                                        }}\n                                        variant=\"outlined\"\n                                    />\n                                    <TextField\n                                        id=\"outlined-helperText\"\n                                        label=\"Location Name\"\n                                        defaultValue=\"Location Name\"\n                                        fullWidth\n                                        className={classes.textField}\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        value={this.props.conLocationName}\n                                    />\n                                    <TextField\n                                        id=\"outlined-helperText\"\n                                        label=\"Street Address\"\n                                        defaultValue=\"Street Address\"\n                                        fullWidth\n                                        className={classes.textField}\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        value={this.props.conStreetNumber + \" \" + this.props.conStreetName}\n                                    />\n                                    <Grid\n                                        container\n                                        direction=\"row\"\n                                        justify=\"flex-end\"\n                                        alignItems=\"flex-start\"\n                                    >\n                                        <TextField\n                                            id=\"outlined-helperText\"\n                                            label=\"City\"\n                                            defaultValue=\"City\"\n                                            className={classes.textField}\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            value={this.props.conCity}\n                                        />\n                                        <Grid item xs>\n                                            <TextField\n                                                id=\"outlined-helperText\"\n                                                label=\"State/Province\"\n                                                defaultValue=\"State\"\n                                                className={classes.textField}\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                fullWidth\n                                                value={this.props.conState}\n                                            />\n                                        </Grid>\n                                    </Grid>\n                                    <Grid\n                                        container\n                                        direction=\"row\"\n                                        justify=\"flex-end\"\n                                        alignItems=\"flex-start\"\n                                    >\n                                        <TextField\n                                            id=\"outlined-helperText\"\n                                            label=\"Postal / Zip Code\"\n                                            defaultValue=\"Zip Code\"\n                                            className={classes.textField}\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            value={this.props.conZipCode}\n                                        />\n                                        <Grid item xs>\n                                            <TextField\n                                                id=\"outlined-select-currency\"\n                                                select\n                                                label=\"Country\"\n                                                className={classes.textField}\n                                                value={this.state.country}\n                                                onChange={this.handleChange('country')}\n                                                fullWidth\n                                                SelectProps={{\n                                                    MenuProps: {\n                                                        className: classes.menu,\n                                                    },\n                                                }}\n                                                helperText=\"Please select your country\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                            >\n                                                {countries.map(option => (\n                                                    <MenuItem key={option.value} value={option.value}>\n                                                        {option.value}\n                                                    </MenuItem>\n                                                ))}\n                                            </TextField>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </form>\n                    </CardContent>\n                </Card>\n            </div>\n        )\n    }\n};\n\n\nContractCard.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ContractCard);","import axios from \"axios\"\n\nexport default {\n    // Gets all clients\n    getClients: function() {\n        return axios.get(\"/api/clients\");\n    },\n    //Gets the client with the given id\n    getClient: function(id) {\n        return axios.get(\"/api/clients/\" + id);\n    },\n    //Deletes the client with the give id\n    deleteClient: function(id) {\n        return axios.delete(\"/api/clients/\" + id);\n    },\n    //Saves a client to the database\n    saveClient: function(clientData) {\n        return axios.post(\"/api/clients\", clientData);\n    },\n    // Gets all appts\n    getAppts: function() {\n        return axios.get(\"/api/appointments\");\n    },\n    //Gets the appt with the given id\n    getAppt: function(id) {\n        return axios.get(\"/api/appointments/\" + id);\n    },\n    //Deletes the appt with the give id\n    deleteAppt: function(id) {\n        return axios.delete(\"/api/appointments/\" + id);\n    },\n    //Saves a appt to the database\n    saveAppt: function(apptData) {\n        return axios.post(\"/api/appointments\", apptData);\n    },\n    // Gets all contractors\n    getContractors: function() {\n        return axios.get(\"/api/contractors\");\n    },\n    //Gets the contractor with the given id\n    getContractor: function(id) {\n        return axios.get(\"/api/contractors/\" + id);\n    },\n    //Deletes the contractor with the give id\n    deleteContractor: function(id) {\n        return axios.delete(\"/api/contractors/\" + id);\n    },\n    //Saves a contractor to the database\n    saveContractor: function(apptData) {\n        return axios.post(\"/api/contractors\", apptData);\n    },\n      \n};","import React, { Component } from \"react\";\nimport Navbar from \"../components/Navbar\";\nimport ClientCard from \"../components/ClientCard\";\nimport ContractCard from \"../components/ContractCard\";\nimport API from \"../utils/API\";\n\n\nclass Address extends Component {\n    state = {\n        clients: [],\n        clientName: \"\",\n        clientPhone: \"\",\n        clientEmail: \"\",\n        clientType: [],\n        contactName: \"\",\n        contactPhone: \"\",\n        contactEmail: \"\",\n        contactPosition: \"\",\n        ctName: \"\",\n        ctEmail: \"\",\n        ctPosition: \"\",\n        clientLocationName: \"\",\n        clientStreetNunmber: \"\",\n        clientStreetName: \"\",\n        clientCity: \"\",\n        clientState: \"\",\n        clientZipCode: \"\"\n    };\n    \n    componentDidMount() {\n        this.loadClients();\n    }\n\n    loadClients = () => {\n        API.getClients()\n          .then(res => {\n            console.log(res.data)\n            this.setState({ \n                clients: res.data, \n                // clientName: \"\",\n                // clientPhone: \"\",\n                // clientEmail: \"\",\n                // contactName: \"\",\n                // contactPhone: \"\",\n                // contactEmail: \"\",\n                // contactPosition: \"\",\n                // ctName: \"\",\n                // ctEmail: \"\",\n                // ctPosition: \"\",\n                // clientLocationName: \"\",\n                // clientStreetNumber: \"\",\n                // clientStreetName: \"\",\n                // clientCity: \"\",\n                // clientState: \"\",\n                // clientZipCode: \"\"\n            })\n        })\n            .catch(err => console.log(err));\n    };\n\n    removeClient = (id) => {\n        //remove the card and not deleting from database\n    }\n\n    deleteClient = (id) => {\n        //deleting client from API\n    }\n\n    handleChange = name => event => {\n        this.setState({\n          [name]: event.target.value,\n        });\n      };\n\n    render() {\n        return (\n            <div>\n            <Navbar/>\n            <br></br>\n            <ContractCard/>\n            <br></br>\n            <ClientCard\n            clientName=\"Tony\"\n            clientPhone=\"555-555-5555\"\n            clientEmail=\"schedulized@gmail.com\"\n            clientType=\"investigation\"\n            clientStreetNumber=\"10228\"\n            clientStreetName=\"Keoki\"\n            />\n            {this.state.clients.map(client => (\n            <ClientCard \n            clientPhone={client.clientPhone}\n            clientEmail={client.clientEmail}\n            clientStreetNumber={client.clientStreetNumber}\n            clientStreetName={client.clientStreetName}\n            clientCity={client.clientCity}\n            clientState={client.clientState}\n            clientZipCode={client.clientZipCode}\n            />\n            ))}\n            </div>\n        )\n\n\n\n\n    }\n}\n\n\n    export default Address;","import React from \"react\";\nimport Navbar from \"../components/Navbar\";\n\nfunction NoMatch() {\n  return (\n      <div>\n          <Navbar/>\n          <h1>404 Page Not Found</h1>\n      </div>\n  )\n}\n\nexport default NoMatch;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport classnames from \"classnames\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport red from \"@material-ui/core/colors/red\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\n\nconst styles = theme => ({\n  card: {\n    maxWidth: 400\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\" // 16:9\n  },\n  actions: {\n    display: \"flex\"\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\"\n  },\n  avatar: {\n    backgroundColor: red[500]\n  }\n});\n\nclass RecipeReviewCard extends React.Component {\n  state = { expanded: false };\n\n  handleExpandClick = () => {\n    this.setState(state => ({ expanded: !state.expanded }));\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Card className={classes.card}>\n        <CardHeader title=\"New Assignment\" subheader=\"Current Date/Time\" />\n        <CardContent>\n          <Typography component=\"p\">\n            This impressive paella is a perfect party dish and a fun meal to\n            cook together with your guests. Add 1 cup of frozen peas along with\n            the mussels, if you like.\n          </Typography>\n        </CardContent>\n        <CardActions className={classes.actions} disableActionSpacing>\n          <IconButton aria-label=\"Add to favorites\">\n            <FavoriteIcon />\n          </IconButton>\n          <IconButton aria-label=\"Share\">\n            <ShareIcon />\n          </IconButton>\n          <IconButton\n            className={classnames(classes.expand, {\n              [classes.expandOpen]: this.state.expanded\n            })}\n            onClick={this.handleExpandClick}\n            aria-expanded={this.state.expanded}\n            aria-label=\"Show more\"\n          >\n            <ExpandMoreIcon />\n          </IconButton>\n        </CardActions>\n      </Card>\n    );\n  }\n}\n\nRecipeReviewCard.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(RecipeReviewCard);\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { green } from \"@material-ui/core/colors\";\n\nimport { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\n\nconst styles = {\n  input: {\n    minWidth: \"100%\"\n  }\n};\n\nclass Standing extends React.Component {\n  state = {\n    age: \"\",\n    open: false\n  };\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleOpen = () => {\n    this.setState({ open: true });\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <FormControl className={classes.input}>\n        <InputLabel htmlFor=\"demo-controlled-open-select\">Standing</InputLabel>\n        <Select\n          open={this.state.open}\n          onClose={this.handleClose}\n          onOpen={this.handleOpen}\n          value={this.state.age}\n          onChange={this.handleChange}\n          inputProps={{\n            name: \"age\",\n            id: \"demo-controlled-open-select\"\n          }}\n        >\n          <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value={1}>Good-Preferred </MenuItem>\n          <MenuItem value={2}>Good</MenuItem>\n          <MenuItem value={3}>Bad</MenuItem>\n          <MenuItem value={4}>Issues</MenuItem>\n        </Select>\n      </FormControl>\n    );\n  }\n}\n\nexport default withStyles(styles)(Standing);\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { green, white } from \"@material-ui/core/colors\";\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  TextField,\n  Grid,\n  Fab,\n  Icon\n} from \"@material-ui/core\";\nimport Standing from \"./form/Standing\";\nimport W9CheckBox from \"./form/W9CheckBox\";\n\nconst styles = {\n  card: {\n    minWidth: 300,\n    minHeight: 200\n    // justifyContent: \"center\",\n  },\n  cardHeader: {\n    background: `#4caf50`,\n    color: white\n  },\n  cardContent: {\n    width: \"100%\"\n  },\n  form: {\n    minWidth: \"100%\"\n  },\n  TextField: {\n    minWidth: \"100%\"\n  },\n  hCenter: {\n    display: \"flex\"\n    // alignItems: \"center\"\n    // justifyContent: \"center\"\n  },\n  fab: {\n    display: \"flex\"\n    // justifyContent:\n  }\n};\n\nclass ContractorCard extends React.Component {\n  state = {\n    name: \"\"\n  };\n\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleOpen = () => {\n    this.setState({ open: true });\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <Card className={classes.card}>\n        <CardHeader title=\"Contractor\" className={classes.cardHeader} />\n        <CardContent>\n          <form className={classes.form} autoComplete=\"off\">\n            <Grid container>\n              <Grid item sm={12} md={12} lg={12}>\n                <TextField\n                  id=\"contractorFirstName\"\n                  placeholder=\"First Name\"\n                  className={classes.TextField}\n                  fullWidth\n                  label=\"First Name\"\n                  value=\"\"\n                />\n              </Grid>\n              <Grid item sm={12} md={12} lg={12}>\n                <TextField\n                  id=\"contractorLastName\"\n                  placeholder=\"Last Name\"\n                  className={classes.TextField}\n                  fullWidth\n                  label=\"LastName\"\n                  value=\"\"\n                />\n              </Grid>\n              <Grid item sm={12} md={12} lg={12}>\n                <TextField\n                  id=\"contractorPhone\"\n                  placeholder=\"Phone Number\"\n                  type=\"tel\"\n                  className={classes.TextField}\n                  fullWidth\n                  label=\"Phone #\"\n                  value=\"\"\n                />\n              </Grid>\n              <Grid item sm={12} md={12} lg={12}>\n                <TextField\n                  id=\"contractorEmail\"\n                  placeholder=\"Email\"\n                  className={classes.TextField}\n                  fullWidth\n                  label=\"Email\"\n                  value=\"\"\n                />\n              </Grid>\n              <Grid item sm={12} md={12} lg={12}>\n                <Standing />\n              </Grid>\n              <Grid item sm={12} md={12} lg={12}>\n                <TextField\n                  id=\"contractorPricing\"\n                  placeholder=\"Pricing\"\n                  className={classes.TextField}\n                  fullWidth\n                  label=\"Pricing\"\n                  value=\"\"\n                />\n              </Grid>\n              <Grid item sm={12} md={12} lg={12}>\n                <TextField\n                  id=\"contractorNotes\"\n                  label=\"Notes\"\n                  multiline\n                  rowsMax=\"4 md={12} lg={12}\"\n                  value={this.state.multiline}\n                  className={classes.TextField}\n                  fullWidth\n                  value=\"\"\n                  margin=\"normal\"\n                />\n              </Grid>\n              <Grid item sm={12} md={12} lg={12}>\n                <TextField\n                  id=\"contractorLocation\"\n                  placeholder=\"Location\"\n                  className={classes.TextField}\n                  fullWidth\n                  label=\"Location\"\n                  value=\"\"\n                />\n              </Grid>\n              <Grid item sm={12} md={12} lg={12}>\n                <TextField\n                  id=\"contractorAdress\"\n                  placeholder=\"Adress 2\"\n                  className={classes.TextField}\n                  fullWidth\n                  label=\"Adress 2\"\n                  value=\"\"\n                />\n              </Grid>\n              <Grid item sm={12} md={12} lg={12}>\n                <TextField\n                  id=\"contractorCity\"\n                  placeholder=\"City\"\n                  className={classes.TextField}\n                  fullWidth\n                  label=\"City\"\n                  value=\"\"\n                />\n              </Grid>\n              <Grid item sm={12} md={12} lg={12}>\n                <TextField\n                  id=\"contractorState\"\n                  placeholder=\"State/Province\"\n                  className={classes.TextField}\n                  fullWidth\n                  label=\"State/Province\"\n                  value=\"\"\n                />\n              </Grid>\n              <Grid item sm={12} md={12} lg={12}>\n                <TextField\n                  id=\"contractorPostalCode\"\n                  placeholder=\"Postal Code\"\n                  className={classes.TextField}\n                  fullWidth\n                  label=\"Postal Code\"\n                  value=\"\"\n                />\n              </Grid>\n              <Grid item sm={12} md={12} lg={12}>\n                <W9CheckBox />\n              </Grid>\n              <Grid item sm={12} md={12} lg={12}>\n                <Fab color=\"primary\" aria-label=\"Add\" className={classes.fab}>\n                  <AddIcon />\n                </Fab>\n              </Grid>\n            </Grid>\n          </form>\n        </CardContent>\n      </Card>\n    );\n  }\n}\n\nexport default withStyles(styles)(ContractorCard);\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\n// import Checkbox from '@material-ui/core/Checkbox';\n\nfunction AddressForm() {\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        Appointment address\n      </Typography>\n      <Grid container spacing={24}>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"firstName\"\n            name=\"firstName\"\n            label=\"Client First name\"\n            fullWidth\n            autoComplete=\"fname\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"lastName\"\n            name=\"lastName\"\n            label=\"Client Last name\"\n            fullWidth\n            autoComplete=\"lname\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            id=\"appt_type\"\n            name=\"appt_type\"\n            label=\"Appointment Type\"\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"location_name\"\n            name=\"location_name\"\n            label=\"Location Name\"\n            fullWidth\n            placehlder=\"Location Name\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            required\n            id=\"address1\"\n            name=\"address1\"\n            label=\"Address line 1\"\n            fullWidth\n            autoComplete=\"billing address-line1\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"city\"\n            name=\"city\"\n            label=\"City\"\n            fullWidth\n            autoComplete=\"billing address-level2\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField id=\"state\" name=\"state\" label=\"State/Province/Region\" fullWidth />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"zip\"\n            name=\"zip\"\n            label=\"Zip / Postal code\"\n            fullWidth\n            autoComplete=\"billing postal-code\"\n          />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nexport default AddressForm;\n","import React from 'react';\n// import PropTypes from 'prop-types';\n// import { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n// import Grid from '@material-ui/core/Grid';\n// import { renderComponent } from 'recompose';\n// import Notes from './Notes';\nimport AddressForm from \"./AddressForm\";\nfunction ApptCard() {\n    return (\n<Card>\n      <CardActionArea>\n\n      <CardContent>\n<Typography gutterBottom variant=\"h5\" component=\"h2\">\n            Lizard\n          </Typography>\n          <Typography component=\"p\">\n            Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\n            across all continents except Antarctica\n          </Typography>\n          <AddressForm />\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button size=\"small\" color=\"primary\">\n          Share\n        </Button>\n        <Button size=\"small\" color=\"primary\">\n          Learn More\n        </Button>\n        {/* <Notes />*/}\n      </CardActions>\n    </Card>\n\n  );\n}\n\nexport default ApptCard;","import React, {\n    Component\n  } from 'react';\n  import Appointmentform from \"../components/AppointmentForm\"\n  import ContractorCard from \"../components/contractor\"\n  import ApptCard from \"../components/Appointments/ApptCard\"\n  import Navbar from \"../components/Navbar\"\n  // import './App.css';\n  \n  class Cards extends Component {\n    render() {\n      return ( \n        <\n        div className = \"App\" >\n        <Navbar/>\n        <Appointmentform />\n  \n        <ContractorCard />\n  \n        <ApptCard />\n  \n  \n        </div>\n      );\n    }\n  }\n  \n  export default Cards;","// import React from \"react\";\n\n// // This component lets us use a bootstrap input element without worrying about class names\n// // or manually wrapping the input with a form-group div\n// // All of the props passed to this component are spread onto the input element\n// function LogInModal(props) {\n//   return (\n//     <form>\n//       {/* switch for log in modal */}\n//    {/*   <Switch checked={auth} onChange={this.handleChange} aria-label=\"LoginSwitch\" />\n//             }\n//             label={auth ? 'Logout' : 'Login'}\n//           /> */}\n//   </form>\n  \n//   );\n// }\n\n// export default LogInModal;\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = theme => ({\n  main: {\n    width: 'auto',\n    display: 'block', // Fix IE 11 issue.\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n      width: 400,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\n  },\n  avatar: {\n    margin: theme.spacing.unit,\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing.unit,\n  },\n  submit: {\n    marginTop: theme.spacing.unit * 3,\n  },\n});\n\nfunction SignIn(props) {\n  const { classes } = props;\n\n  return (\n    <main className={classes.main}>\n      <CssBaseline />\n      <Paper className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form}>\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"email\">Email Address</InputLabel>\n            <Input id=\"email\" name=\"email\" autoComplete=\"email\" autoFocus />\n          </FormControl>\n          <FormControl margin=\"normal\" required fullWidth>\n            <InputLabel htmlFor=\"password\">Password</InputLabel>\n            <Input name=\"password\" type=\"password\" id=\"password\" autoComplete=\"current-password\" />\n          </FormControl>\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign in\n          </Button>\n        </form>\n      </Paper>\n    </main>\n  );\n}\n\nSignIn.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SignIn);\n","// import React from \"react\";\n// import \"./style.css\";\n\n// function Nav() {\n\n//   return (\n//     <nav className=\"navbar navbar-light bg-success\">\n//       <h3 href=\"/\">Schedulize</h3>\n//          </nav>\n//   );\n// }\n\n// export default Nav;\n\nimport React from 'react';\n// import PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport './nav.css'\n// need these to import color scheme\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\n\nconst bar = green[500]; // #4caf50  \n\n\n// eslint-disable-next-line no-unused-vars\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#9A0307',\n      contrastText: '#F9F9F9 ',\n    },\n    secondary: {\n      main: '#4caf50',\n      contrastText: '#F9F9F9 ',\n    },\n  },\n});\n\n\nfunction Nav () {\n  return (\n    <div>\n      <AppBar className =\"AppBar\" color = {bar}>\n        <Toolbar>\n          <Typography>\n            Schedulize\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default Nav;\n","import React, { Component } from 'react';\nimport SignIn from \"../components/LogInModal\";\nimport Nav from \"../components/Nav\";\n\nfunction Login() {\n    return (\n        <div>\n            <Nav/>\n            <SignIn/>\n        </div>\n    )\n}\n\nexport default Login;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Calendar from \"./pages/Calendar\";\nimport MapPage from \"./pages/MapPage\";\nimport Address from \"./pages/Address\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Cards from \"./pages/Cards\";\nimport Login from \"./pages/Login\";\n\nfunction App() {\n  return (\n    <Router>\n    <div>\n      <Switch>\n        <Route exact path=\"/\" component={Login} />\n        <Route exact path=\"/calendar\" component={Calendar} />\n        <Route exact path=\"/map\" component={MapPage} />\n        <Route exact path=\"/forms\" component={Cards} />\n        <Route exact path=\"/addressbook\" component={Address} />\n        <Route component={NoMatch}/>\n      </Switch>\n    </div>\n    </Router>\n  );\n}\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}